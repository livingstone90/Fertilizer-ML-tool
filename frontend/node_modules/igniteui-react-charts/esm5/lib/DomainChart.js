/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __values } from "tslib";
import { Base, INotifyPropertyChanged_$type, BaseError, PropertyChangedEventArgs, Delegate_$type, fromEnum, String_$type, runOn, delegateCombine, EnumUtil, enumGetBox, typeCast, delegateRemove, markType, TypeRegistrar, getInstanceType } from "igniteui-react-core";
import { IDataLegendTarget_$type } from "igniteui-react-core";
import { ArrayExtension } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { XamDataChart } from "./XamDataChart";
import { DataSeriesType_$type } from "igniteui-react-core";
import { MarkerType_$type } from "./MarkerType";
import { Color } from "igniteui-react-core";
import { ColorUtil } from "igniteui-react-core";
import { DataToolTipLayerGroupingMode_$type } from "igniteui-react-core";
import { DataTooltipGroupedPositionX_$type } from "igniteui-react-core";
import { DataTooltipGroupedPositionY_$type } from "igniteui-react-core";
import { DataAbbreviationMode_$type } from "igniteui-react-core";
import { DataLegendValueMode_$type } from "igniteui-react-core";
import { Thickness } from "igniteui-react-core";
import { DataLegendHeaderDateMode_$type } from "igniteui-react-core";
import { DataLegendHeaderTimeMode_$type } from "igniteui-react-core";
import { DataLegendSummaryType_$type } from "igniteui-react-core";
import { LegendItemBadgeShape_$type } from "igniteui-react-core";
import { DataLegendUnitsMode_$type } from "igniteui-react-core";
import { DataLegendLabelMode_$type } from "igniteui-react-core";
import { ChartSortDescriptionCollection } from "./ChartSortDescriptionCollection";
import { FilterExpressionCollection } from "igniteui-react-core";
import { ChartSummaryDescriptionCollection } from "./ChartSummaryDescriptionCollection";
import { SortGroupParser } from "igniteui-react-core";
import { SummaryParser } from "igniteui-react-core";
import { BrushCollection } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { HorizontalAlignment_$type } from "igniteui-react-core";
import { UnknownValuePlotting_$type } from "igniteui-react-core";
import { SeriesOutlineMode_$type } from "./SeriesOutlineMode";
import { MarkerOutlineMode_$type } from "./MarkerOutlineMode";
import { MarkerFillMode_$type } from "./MarkerFillMode";
import { MarkerAutomaticBehavior_$type } from "./MarkerAutomaticBehavior";
import { TrendLineType_$type } from "igniteui-react-core";
import { ComputedPlotAreaMarginMode_$type } from "./ComputedPlotAreaMarginMode";
import { SeriesPlotAreaMarginHorizontalMode_$type } from "./SeriesPlotAreaMarginHorizontalMode";
import { SeriesPlotAreaMarginVerticalMode_$type } from "./SeriesPlotAreaMarginVerticalMode";
import { SeriesHighlightingMode_$type } from "./SeriesHighlightingMode";
import { SeriesHighlightingBehavior_$type } from "./SeriesHighlightingBehavior";
import { LegendHighlightingMode_$type } from "./LegendHighlightingMode";
import { LegendItemBadgeMode_$type } from "igniteui-react-core";
import { ToolTipType_$type } from "./ToolTipType";
import { CrosshairsDisplayMode_$type } from "./CrosshairsDisplayMode";
import { SeriesViewerScrollbarMode_$type } from "./SeriesViewerScrollbarMode";
import { SeriesViewerHorizontalScrollbarPosition_$type } from "./SeriesViewerHorizontalScrollbarPosition";
import { SeriesViewerVerticalScrollbarPosition_$type } from "./SeriesViewerVerticalScrollbarPosition";
import { Defaults } from "./Defaults";
import { Series } from "./Series";
import { DeviceUtils } from "igniteui-react-core";
import { Dictionary$2 } from "igniteui-react-core";
import { DataSeriesAdapter } from "igniteui-react-core";
import { ChartSortDescription } from "./ChartSortDescription";
import { ChartSummaryDescription } from "./ChartSummaryDescription";
import { ObservableCollection$1 } from "igniteui-react-core";
import { Random } from "igniteui-react-core";
import { ObservableColorCollection } from "igniteui-react-core";
import { BrushCollectionUtil } from "igniteui-react-core";
import { ChartSeriesEventArgs } from "./ChartSeriesEventArgs";
import { DomainChartSeriesPointerEventArgs } from "./DomainChartSeriesPointerEventArgs";
import { BrushUtil } from "igniteui-react-core";
import { IUnknownValuePlotting_$type } from "igniteui-react-core";
import { ITrendLineSeries_$type } from "./ITrendLineSeries";
import { isNaN_ } from "igniteui-react-core";
import { stringIsNullOrEmpty, stringEmpty, stringStartsWith } from "igniteui-react-core";
/**
 * @hidden
 */
var DomainChart = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DomainChart, _super);
    function DomainChart() {
        var _this = _super.call(this) || this;
        _this.ju = null;
        _this.js = null;
        _this.f9 = null;
        _this.g1 = NaN;
        _this.jr = null;
        _this.he = 0;
        _this.hf = 0;
        _this.hg = 0;
        _this.hd = 0;
        _this.g9 = 0;
        _this.hb = 0;
        _this.ha = 0;
        _this.g8 = 0;
        _this.ts = null;
        _this.tt = null;
        _this.gy = NaN;
        _this.hh = NaN;
        _this.g7 = NaN;
        _this.gl = NaN;
        _this.jf = 0;
        _this.du = null;
        _this.i6 = null;
        _this.fz = false;
        _this.b5 = null;
        _this.ko = null;
        _this.kq = null;
        _this.dm = null;
        _this.gd = null;
        _this.propertyChanged = null;
        _this.je = 0;
        _this.ft = false;
        _this.b0 = null;
        _this.f8 = null;
        _this.b4 = null;
        _this.ev = false;
        _this.bs = 0;
        _this.gp = NaN;
        _this.gq = NaN;
        _this.gn = DeviceUtils.g(10);
        _this.go = DeviceUtils.g(10);
        _this.bo = 0;
        _this.bq = 0;
        _this.eo = true;
        _this.e = null;
        _this.b = null;
        _this.d = null;
        _this.a = null;
        _this.a8 = 0;
        _this.ja = -1;
        _this.jb = -1;
        _this.bm = 0;
        _this.kg = stringEmpty();
        _this.ep = true;
        _this.kh = null;
        _this.f = null;
        _this.u0 = new Thickness(0, DeviceUtils.g(5));
        _this.eq = true;
        _this.ki = "N/A";
        _this.er = false;
        _this.u1 = new Thickness(1, DeviceUtils.g(2), DeviceUtils.g(0), DeviceUtils.g(2), DeviceUtils.g(0));
        _this.tn = null;
        _this.d4 = null;
        _this.ka = null;
        _this.c = null;
        _this.j9 = stringEmpty();
        _this.bc = 0;
        _this.be = 0;
        _this.kb = null;
        _this.tf = null;
        _this.uu = new Thickness(1, DeviceUtils.g(2), DeviceUtils.g(0), DeviceUtils.g(0), DeviceUtils.g(0));
        _this.ut = new Thickness(0, DeviceUtils.g(5));
        _this.en = true;
        _this.dw = null;
        _this.ti = null;
        _this.dz = null;
        _this.bi = 0;
        _this.kd = null;
        _this.ux = new Thickness(1, DeviceUtils.g(2), DeviceUtils.g(0), DeviceUtils.g(0), DeviceUtils.g(0));
        _this.uw = new Thickness(0, DeviceUtils.g(5));
        _this.tk = null;
        _this.d1 = null;
        _this.kc = null;
        _this.th = null;
        _this.dy = null;
        _this.ke = null;
        _this.tj = null;
        _this.d0 = null;
        _this.us = new Thickness(0, DeviceUtils.g(0));
        _this.cb = 0;
        _this.bk = 0;
        _this.kf = null;
        _this.tm = null;
        _this.uz = new Thickness(0, DeviceUtils.g(0));
        _this.d3 = null;
        _this.uy = new Thickness(0, DeviceUtils.g(0));
        _this.tl = null;
        _this.d2 = null;
        _this.bg = 0;
        _this.tg = null;
        _this.uv = new Thickness(1, DeviceUtils.g(8), DeviceUtils.g(0), DeviceUtils.g(0), DeviceUtils.g(0));
        _this.dx = null;
        _this.seriesAdded = null;
        _this.seriesRemoved = null;
        _this.seriesPointerEnter = null;
        _this.seriesPointerLeave = null;
        _this.seriesPointerMove = null;
        _this.seriesPointerDown = null;
        _this.seriesPointerUp = null;
        _this.calloutStyleUpdating = null;
        _this.calloutRenderStyleUpdating = null;
        _this.gc = null;
        _this.ef = null;
        _this.ei = false;
        _this.f6 = new Dictionary$2(String_$type, Base.$, 0);
        _this.f7 = new List$1(String_$type, 0);
        _this.as = null;
        _this.ao = null;
        _this.an = null;
        _this.dp = null;
        _this.a0 = null;
        _this.ds = null;
        _this.dt = null;
        _this.e3 = true;
        _this.e2 = true;
        _this.e4 = true;
        _this.e1 = true;
        _this.ar = null;
        _this.aq = null;
        _this.ap = null;
        _this.dq = null;
        _this.az = null;
        _this.kl = null;
        _this.kj = null;
        _this.kk = null;
        _this.km = null;
        _this.jq = null;
        _this.jp = null;
        _this.h = null;
        _this.g = null;
        _this.t = null;
        _this.w = null;
        _this.r = null;
        _this.s = null;
        _this.b2 = null;
        _this.eu = true;
        _this.ex = true;
        _this.ez = false;
        _this.e5 = false;
        _this.ew = false;
        _this.up = new Rect(0, 0, 0, 1, 1);
        _this.kp = null;
        _this.kn = null;
        _this.s6 = 1;
        _this.s5 = 1;
        _this.dk = 0;
        _this.g6 = NaN;
        _this.hc = NaN;
        _this.c2 = 0;
        _this.cj = 0;
        _this.ch = 0;
        _this.gz = NaN;
        _this.g0 = NaN;
        _this.co = null;
        _this.cf = 4;
        _this.u = null;
        _this.v = null;
        _this.jd = 400;
        _this.gk = NaN;
        _this.eh = false;
        _this.x = null;
        _this.di = 0;
        _this.hi = DeviceUtils.g(1.5);
        _this.eg = true;
        _this.g3 = NaN;
        _this.g5 = NaN;
        _this.g4 = NaN;
        _this.g2 = NaN;
        _this.a3 = 0;
        _this.c4 = 0;
        _this.c6 = 0;
        _this.c0 = 0;
        _this.cy = 0;
        _this.b7 = 0;
        _this.cc = 0;
        _this.b9 = 0;
        _this.jg = 7;
        _this.dg = 4;
        _this.a6 = 0;
        _this.em = false;
        _this.te = null;
        _this.gm = NaN;
        _this.td = null;
        _this.el = true;
        _this.s9 = null;
        _this.tb = null;
        _this.ta = null;
        _this.tc = null;
        _this.i8 = -1;
        _this.i9 = -1;
        _this.ey = false;
        _this.e0 = true;
        _this.es = false;
        _this.to = null;
        _this.tp = null;
        _this.jc = -1;
        _this.ek = false;
        _this.ej = false;
        _this.gh = null;
        _this.ah = null;
        _this.j7 = null;
        _this.j8 = null;
        _this.j6 = "CalloutLabel";
        _this.j5 = "CalloutContent";
        _this.da = 0;
        _this.db = 0;
        _this.c8 = 0;
        _this.de = 0;
        _this.tq = null;
        _this.tr = null;
        _this.gv = NaN;
        _this.gu = NaN;
        _this.gr = NaN;
        _this.gs = NaN;
        _this.gt = NaN;
        _this.gx = NaN;
        _this.gw = NaN;
        _this.et = true;
        _this.tu = null;
        _this.tv = null;
        _this.hm = NaN;
        _this.hl = NaN;
        _this.hj = NaN;
        _this.hp = NaN;
        _this.hk = NaN;
        _this.ho = NaN;
        _this.hn = NaN;
        _this.e6 = true;
        _this.hr = NaN;
        _this.hq = NaN;
        _this.ht = NaN;
        _this.hs = NaN;
        _this.gc = new List$1(Delegate_$type, 0);
        _this.rp();
        _this.q5();
        return _this;
    }
    DomainChart.prototype.provideContainer = function (a) {
        if (a == null) {
            this.r5(function (b) {
                b.destroy();
                b.provideContainer(null);
            });
            return;
        }
        var b = this.ju;
        this.ju = a;
        if (this.ef != null && this.ju != null && b == null) {
            this.ju.setTimeout(this.ef, 0);
            this.ef = null;
        }
        var c = ((function () {
            var $ret = new XamDataChart();
            $ret.ef = true;
            return $ret;
        })());
        c.provideContainer(a);
        this.dataChart = c;
        this.rq();
    };
    DomainChart.prototype.destroy = function () {
        this.provideContainer(null);
    };
    DomainChart.prototype.rq = function () {
        if (this.dataChart == null) {
            return;
        }
        var a = this.dataChart.cu.j.e();
        this.aa = a.a;
        this.ae = a.f;
        this.ac = a.b;
        this.ad = a.c;
        this.ag = a.g;
        this.hw = Defaults.j;
        this.rr();
    };
    DomainChart.prototype.rr = function () {
    };
    DomainChart.prototype.rn = function (a) {
        if (a == null) {
            return;
        }
        a.g9 = this.is;
        a.g7 = this.iq;
        a.g8 = this.ir;
        a.g6 = this.ip;
        a.sv = this.ul;
        a.g3 = this.ik;
        a.g5 = this.im;
        a.g4 = this.il;
        a.g2 = this.ij;
        a.su = this.uk;
        if (!isNaN_(this.ib)) {
            a.gx = this.ib;
        }
    };
    DomainChart.prototype.rk = function () {
    };
    DomainChart.prototype.rt = function (a, b) {
        a.ho = this.jn;
        a.cf = this.dv;
    };
    DomainChart.prototype.se = function (a, b, c) {
        var _this = this;
        switch (a) {
            case "TitleTopMargin":
                if (this.dataChart != null) {
                    this.dataChart.g9 = this.is;
                }
                break;
            case "TitleLeftMargin":
                if (this.dataChart != null) {
                    this.dataChart.g7 = this.iq;
                }
                break;
            case "PixelScalingRatio":
                if (this.dataChart != null) {
                    this.r5(function (d) { return d.gx = _this.ib; });
                }
                break;
            case "TitleRightMargin":
                if (this.dataChart != null) {
                    this.dataChart.g8 = this.ir;
                }
                break;
            case "TitleBottomMargin":
                if (this.dataChart != null) {
                    this.dataChart.g6 = this.ip;
                }
                break;
            case "TitleTextColor":
                if (this.dataChart != null) {
                    this.dataChart.sv = this.ul;
                }
                break;
            case "SubtitleLeftMargin":
                if (this.dataChart != null) {
                    this.dataChart.g3 = this.ik;
                }
                break;
            case "SubtitleTopMargin":
                if (this.dataChart != null) {
                    this.dataChart.g5 = this.im;
                }
                break;
            case "SubtitleRightMargin":
                if (this.dataChart != null) {
                    this.dataChart.g4 = this.il;
                }
                break;
            case "SubtitleBottomMargin":
                if (this.dataChart != null) {
                    this.dataChart.g2 = this.ij;
                }
                break;
            case "SubtitleTextColor":
                if (this.dataChart != null) {
                    this.dataChart.su = this.uk;
                }
                break;
            case "LeftMargin":
                if (this.dataChart != null) {
                    this.dataChart.gw = this.h8;
                }
                break;
            case "TopMargin":
                if (this.dataChart != null) {
                    this.dataChart.ha = this.it;
                }
                break;
            case "RightMargin":
                if (this.dataChart != null) {
                    this.dataChart.g1 = this.ii;
                }
                break;
            case "BottomMargin":
                if (this.dataChart != null) {
                    this.dataChart.gj = this.hv;
                }
                break;
            case "TransitionDuration":
                this.rg(function (d) { return d.ho = _this.jn; });
                break;
            case "TransitionEasingFunction":
                this.rg(function (d) { return d.cf = _this.dv; });
                break;
        }
    };
    Object.defineProperty(DomainChart.prototype, "tooltipTemplate", {
        get: function () {
            return ArrayExtension.getModulus$1(Base.$, this.tooltipTemplates, 0);
        },
        set: function (a) {
            this.tooltipTemplates = a == null ? null : new List$1(Base.$, 1, [a]);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "tooltipTemplates", {
        get: function () {
            return this.f9;
        },
        set: function (a) {
            var b = this.tooltipTemplates;
            if (a != b) {
                this.f9 = a;
                this.sd("TooltipTemplates", b, this.tooltipTemplates);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ib", {
        get: function () {
            return this.g1;
        },
        set: function (a) {
            var b = this.g1;
            if (a != b) {
                this.g1 = a;
                this.sd("PixelScalingRatio", b, this.ib);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "toolTip", {
        get: function () {
            return this.jr;
        },
        set: function (a) {
            var b = this.toolTip;
            if (b != a) {
                this.jr = a;
                this.sd("ToolTip", b, this.toolTip);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "iq", {
        get: function () {
            return this.he;
        },
        set: function (a) {
            var b = this.iq;
            if (a != b) {
                this.he = a;
                this.sd("TitleLeftMargin", b, this.iq);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ir", {
        get: function () {
            return this.hf;
        },
        set: function (a) {
            var b = this.ir;
            if (a != b) {
                this.hf = a;
                this.sd("TitleRightMargin", b, this.ir);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "is", {
        get: function () {
            return this.hg;
        },
        set: function (a) {
            var b = this.is;
            if (a != b) {
                this.hg = a;
                this.sd("TitleTopMargin", b, this.is);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ip", {
        get: function () {
            return this.hd;
        },
        set: function (a) {
            var b = this.ip;
            if (a != b) {
                this.hd = a;
                this.sd("TitleBottomMargin", b, this.ip);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ik", {
        get: function () {
            return this.g9;
        },
        set: function (a) {
            var b = this.ik;
            if (a != b) {
                this.g9 = a;
                this.sd("SubtitleLeftMargin", b, this.ik);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "im", {
        get: function () {
            return this.hb;
        },
        set: function (a) {
            var b = this.im;
            if (a != b) {
                this.hb = a;
                this.sd("SubtitleTopMargin", b, this.im);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "il", {
        get: function () {
            return this.ha;
        },
        set: function (a) {
            var b = this.il;
            if (a != b) {
                this.ha = a;
                this.sd("SubtitleRightMargin", b, this.il);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ij", {
        get: function () {
            return this.g8;
        },
        set: function (a) {
            var b = this.ij;
            if (a != b) {
                this.g8 = a;
                this.sd("SubtitleBottomMargin", b, this.ij);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "uk", {
        get: function () {
            return this.ts;
        },
        set: function (a) {
            var b = this.uk;
            if (a != b) {
                this.ts = a;
                this.sd("SubtitleTextColor", b, this.uk);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ul", {
        get: function () {
            return this.tt;
        },
        set: function (a) {
            var b = this.ul;
            if (a != b) {
                this.tt = a;
                this.sd("TitleTextColor", b, this.ul);
            }
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.get_h8 = function () {
        return this.gy;
    };
    DomainChart.prototype.set_h8 = function (a) {
        var b = this.h8;
        if (a != b) {
            this.gy = a;
            this.sd("LeftMargin", b, this.h8);
        }
    };
    Object.defineProperty(DomainChart.prototype, "h8", {
        get: function () {
            return this.get_h8();
        },
        set: function (a) {
            this.set_h8(a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "it", {
        get: function () {
            return this.hh;
        },
        set: function (a) {
            var b = this.it;
            if (a != b) {
                this.hh = a;
                this.sd("TopMargin", b, this.it);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ii", {
        get: function () {
            return this.g7;
        },
        set: function (a) {
            var b = this.ii;
            if (a != b) {
                this.g7 = a;
                this.sd("RightMargin", b, this.ii);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "hv", {
        get: function () {
            return this.gl;
        },
        set: function (a) {
            var b = this.hv;
            if (a != b) {
                this.gl = a;
                this.sd("BottomMargin", b, this.hv);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "jn", {
        get: function () {
            return this.jf;
        },
        set: function (a) {
            var b = this.jn;
            if (a != b) {
                this.jf = a;
                this.sd("TransitionDuration", b, this.jn);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "dv", {
        get: function () {
            return this.du;
        },
        set: function (a) {
            var b = this.dv;
            if (a != b) {
                this.du = a;
                this.sd("TransitionEasingFunction", b, this.dv);
            }
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.ro = function (a) {
        if (this.dataChart == null) {
            return;
        }
        a.kn = this.p3;
        a.kb = this.ps;
    };
    DomainChart.prototype.ru = function (a, b) {
        this.rv(a, b);
    };
    DomainChart.prototype.rl = function () {
    };
    DomainChart.prototype.rv = function (a, b) {
        if (a == null) {
            return;
        }
        if (this.dh == 3) {
            return;
        }
        var toolTipTemplate_ = ArrayExtension.getModulus$1(Base.$, this.tooltipTemplates, b);
        if (toolTipTemplate_ == null) {
            a.et = true;
        }
        else {
            var series_ = a;
            a.et = false;
            series_.externalObject.tooltipTemplate = toolTipTemplate_;
        }
    };
    DomainChart.prototype.s3 = function (a, b, c) {
    };
    DomainChart.prototype.jw = function (a) {
        return a;
        return null;
    };
    DomainChart.prototype.i7 = function (a) {
        return null;
    };
    DomainChart.prototype.sf = function (a, b, c) {
        var _this = this;
        switch (a) {
            case "SubtitleTextStyle":
                if (this.dataChart != null) {
                    this.dataChart.kb = this.ps;
                }
                break;
            case "TitleTextStyle":
                if (this.dataChart != null) {
                    this.dataChart.kn = this.p3;
                }
                break;
            case "TooltipTemplate":
                if (this.fz) {
                    return;
                }
                this.fz = true;
                this.tooltipTemplate = this.jw(this.tooltipTemplate);
                this.fz = false;
                if (this.dataChart != null) {
                    this.dataChart.h0 = this.tooltipTemplate;
                }
                this.toolTip = this.tooltipTemplate;
                break;
            case "ToolTip":
                this.rh(function (d, e) { return _this.rv(d, e); });
                break;
            case "TooltipTemplates":
                if (this.tooltipTemplates == null) {
                    break;
                }
                this.fz = true;
                this.rh(function (d, e) {
                    var f = _this.jw(ArrayExtension.getModulus$1(Base.$, _this.tooltipTemplates, e));
                    var series_ = d;
                    var templ_ = f;
                    series_.externalObject.tooltipTemplate = templ_;
                });
                this.fz = false;
                break;
        }
    };
    Object.defineProperty(DomainChart.prototype, "b6", {
        get: function () {
            return this.b5;
        },
        set: function (a) {
            var b = this.b6;
            if (a != b) {
                this.b5 = a;
                this.sd("Widget", b, this.b6);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ps", {
        get: function () {
            return this.ko;
        },
        set: function (a) {
            var b = this.ps;
            if (a != b) {
                this.ko = a;
                this.sd("SubtitleTextStyle", b, this.ps);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "p3", {
        get: function () {
            return this.kq;
        },
        set: function (a) {
            var b = this.p3;
            if (a != b) {
                this.kq = a;
                this.sd("TitleTextStyle", b, this.p3);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "dataChart", {
        get: function () {
            return this.dm;
        },
        set: function (a) {
            var b = this.dataChart;
            if (b != a) {
                this.dm = a;
                this.sd("DataChart", b, this.dataChart);
            }
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.onDetachedFromUI = function () {
        this.r5(function (a) { return a.onDetachedFromUI(); });
    };
    DomainChart.prototype.onAttachedToUI = function () {
        this.r5(function (a) { return a.onAttachedToUI(); });
    };
    DomainChart.prototype.rp = function () {
        var e_1, _a, e_2, _b;
        this.gd = new List$1(MarkerType_$type, 0);
        this.bb = new DataSeriesAdapter().e;
        this.as = new ChartSortDescriptionCollection();
        this.ao = new ChartSortDescriptionCollection();
        this.an = new ChartSortDescriptionCollection();
        this.a0 = new ChartSummaryDescriptionCollection();
        this.dp = new FilterExpressionCollection();
        this.ay.e = this.bb.sortDescriptions;
        this.at.e = this.bb.groupDescriptions;
        this.dr.syncTarget = this.bb.filterExpressions;
        this.a2.e = this.bb.summaryDescriptions;
        this.au.e = this.bb.postSortDescriptions;
        this.ds = new SortGroupParser();
        this.dt = new SummaryParser();
        this.ar = ((function () {
            var $ret = new ChartSortDescriptionCollection();
            $ret.i = true;
            return $ret;
        })());
        this.aq = ((function () {
            var $ret = new ChartSortDescriptionCollection();
            $ret.i = true;
            return $ret;
        })());
        this.ap = ((function () {
            var $ret = new ChartSortDescriptionCollection();
            $ret.i = true;
            return $ret;
        })());
        this.az = ((function () {
            var $ret = new ChartSummaryDescriptionCollection();
            $ret.i = true;
            return $ret;
        })());
        this.dq = ((function () {
            var $ret = new FilterExpressionCollection();
            $ret.shouldDetachOnTargetChange = true;
            return $ret;
        })());
        if (this.e3) {
            if (this.ay.j.count == 0) {
                this.ar.e = this.bb.sortDescriptions;
            }
            if (this.au.j.count == 0) {
                this.aq.e = this.bb.postSortDescriptions;
            }
            this.e3 = false;
        }
        if (this.e2) {
            if (this.at.j.count == 0) {
                this.ap.e = this.bb.groupDescriptions;
            }
            this.e2 = false;
        }
        if (this.e4) {
            if (this.a2.j.count == 0) {
                this.az.e = this.bb.summaryDescriptions;
            }
            this.e4 = false;
        }
        if (this.q != null) {
            this.bb.includedProperties = this.q;
        }
        if (this.o != null) {
            this.bb.excludedProperties = this.o;
        }
        this.bb.supportedSeriesTypes = this.gf.toArray();
        this.bb.rules.clear();
        try {
            for (var _c = __values(fromEnum(this.ge)), _d = _c.next(); !_d.done; _d = _c.next()) {
                var a = _d.value;
                this.bb.rules.add(a);
            }
        }
        catch (e_1_1) {
            e_1 = { error: e_1_1 };
        }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return))
                    _a.call(_c);
            }
            finally {
                if (e_1)
                    throw e_1.error;
            }
        }
        var b = new List$1(String_$type, 0);
        try {
            for (var _e = __values(fromEnum(this.bb.rules)), _f = _e.next(); !_f.done; _f = _e.next()) {
                var c = _f.value;
                b.add(getInstanceType(c).typeName);
            }
        }
        catch (e_2_1) {
            e_2 = { error: e_2_1 };
        }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return))
                    _b.call(_e);
            }
            finally {
                if (e_2)
                    throw e_2.error;
            }
        }
        var d = this.bb.dataSeries;
        d.collectionChanged = delegateCombine(d.collectionChanged, runOn(this, this.r8));
    };
    DomainChart.prototype.fv = function (a) {
        return a != 24 && this.gf.contains(a);
    };
    DomainChart.prototype.notifyResized = function () {
        this.r5(function (a) { return a.notifyContainerResized(); });
    };
    DomainChart.prototype.r3 = function () {
        this.r5(function (a) {
            for (var b = 0; b < a.series.count; b++) {
                a.series._inner[b].lu();
            }
        });
    };
    DomainChart.prototype.ra = function () {
        if (this.dataChart == null) {
            return;
        }
        if (this.ft) {
            this.sx();
        }
        this.dataChart.flush();
    };
    DomainChart.prototype.ri = function () {
        if (this.dataChart == null) {
            return;
        }
        this.dataChart.l0();
    };
    DomainChart.prototype.sl = function (a) {
        if (this.propertyChanged != null) {
            this.propertyChanged(this, new PropertyChangedEventArgs(a));
        }
    };
    DomainChart.prototype.rc = function (a) {
        this.rd(function (b, c) { return a(b); });
    };
    DomainChart.prototype.rd = function (a) {
        if (this.dataChart == null) {
            return;
        }
        for (var b = 0; b < this.dataChart.series.count; b++) {
            a(this.dataChart.series._inner[b], b);
        }
    };
    DomainChart.prototype.rg = function (a) {
        this.rh(function (b, c) { return a(b); });
    };
    DomainChart.prototype.rh = function (a) {
        if (this.dataChart == null) {
            return;
        }
        for (var b = 0; b < this.dataChart.series.count; b++) {
            var c = this.dataChart.series._inner[b];
            if (!c.db) {
                a(c, b);
            }
        }
    };
    DomainChart.prototype.re = function (a) {
        this.rf(function (b, c) { return a(b); });
    };
    DomainChart.prototype.rf = function (a) {
        if (this.dataChart == null) {
            return;
        }
        for (var b = 0; b < this.dataChart.series.count; b++) {
            var c = this.dataChart.series._inner[b];
            if (c.dc) {
                a(c, b);
            }
        }
    };
    DomainChart.prototype.su = function () {
        this.rc(function (a) { return a.mo(); });
    };
    DomainChart.prototype.r5 = function (a) {
        this.r6(a, true);
    };
    DomainChart.prototype.r6 = function (a, b) {
        this.r7(a, b, null);
    };
    DomainChart.prototype.r7 = function (a, b, c) {
        if (this.dataChart == null) {
            return;
        }
        a(this.dataChart);
    };
    DomainChart.prototype.fw = function (a) {
        if (!this.fv(a.suggestedSeries)) {
            return false;
        }
        var b = a.data;
        if (b == null) {
            return false;
        }
        return true;
    };
    DomainChart.prototype.fo = function () {
        if (this.dataChart == null) {
            return false;
        }
        return true;
    };
    DomainChart.prototype.nz = function (a) {
        var b = "series_" + (this.dataChart.series.count + 1) + "_" + EnumUtil.getName(DataSeriesType_$type, a.suggestedSeries);
        return b;
    };
    DomainChart.prototype.n0 = function (a, b) {
        if (this.fr && this.f4) {
            var c = "";
            var d = 5 + Math.round(DomainChart.j3.nextDouble() * 4);
            for (var e = 0; e < d; e++) {
                c = c + "\u2588";
            }
            return c;
        }
        if (stringIsNullOrEmpty(a.title)) {
            var f = EnumUtil.getName(DataSeriesType_$type, b);
            return f + (this.dataChart.series.count + 1);
        }
        else {
            return a.title;
        }
    };
    DomainChart.prototype.ny = function () {
        return stringEmpty();
    };
    DomainChart.prototype.sx = function () {
        var e_3, _a, e_4, _b;
        if (this.dataChart == null) {
            return;
        }
        this.ft = false;
        this.sz();
        if (this.actualItemsSource == null) {
            return;
        }
        var a = new List$1(MarkerType_$type, 0);
        try {
            for (var _c = __values(fromEnum(this.bb.dataSeries)), _d = _c.next(); !_d.done; _d = _c.next()) {
                var b = _d.value;
                a.add(this.cl(b.suggestedMarker));
            }
        }
        catch (e_3_1) {
            e_3 = { error: e_3_1 };
        }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return))
                    _a.call(_c);
            }
            finally {
                if (e_3)
                    throw e_3.error;
            }
        }
        this.gd = a;
        var c = 0;
        try {
            for (var _e = __values(fromEnum(this.bb.dataSeries)), _f = _e.next(); !_f.done; _f = _e.next()) {
                var d = _f.value;
                if (!this.fw(d)) {
                    continue;
                }
                if (d.index < 0) {
                    d.index = c;
                }
                this.sv(d);
                this.sw(d);
                c++;
            }
        }
        catch (e_4_1) {
            e_4 = { error: e_4_1 };
        }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return))
                    _b.call(_e);
            }
            finally {
                if (e_4)
                    throw e_4.error;
            }
        }
        this.s4();
        this.rd(runOn(this, this.rs));
    };
    DomainChart.prototype.cx = function (seriesType_) {
        return (this.externalObject.createSeries(seriesType_).i);
    };
    DomainChart.prototype.cq = function () {
        return this.cx(28);
    };
    DomainChart.prototype.cs = function () {
        return this.cx(27);
    };
    DomainChart.prototype.cu = function () {
        return this.cx(29);
    };
    DomainChart.prototype.cv = function () {
        return this.cx(25);
    };
    DomainChart.prototype.cr = function () {
        return this.cx(26);
    };
    DomainChart.prototype.ct = function () {
        return this.cx(32);
    };
    Object.defineProperty(DomainChart.prototype, "b1", {
        get: function () {
            if (TypeRegistrar.isRegistered("AnnotationLayerProxy")) {
                return TypeRegistrar.create("AnnotationLayerProxy");
            }
            else {
                throw new BaseError(1, "annotation layer module is not loaded, but is required.");
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "fk", {
        get: function () {
            return (TypeRegistrar.isRegistered("AnnotationLayerProxy"));
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.fm = function (a) {
        if (!this.fk) {
            return false;
        }
        return this.b1.matchesType(a);
    };
    DomainChart.prototype.s4 = function () {
        var a = this.gb("", true);
        if (a != null) {
            for (var b = 0; b < a.count; b++) {
                this.dataChart.series.add(a._inner[b]);
            }
        }
    };
    DomainChart.prototype.fp = function () {
        return this.a7 == 0 || this.a7 == 4 || this.a7 == 2;
    };
    DomainChart.prototype.fq = function () {
        return this.a7 == 0 || this.a7 == 4 || this.a7 == 3;
    };
    DomainChart.prototype.get_fn = function () {
        return this.gh == null && this.ek && (this.j7 == null || this.j8 == null);
    };
    Object.defineProperty(DomainChart.prototype, "fn", {
        get: function () {
            return this.get_fn();
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.gb = function (a, b) {
        var e_5, _a, e_6, _b;
        if (!this.fk) {
            return null;
        }
        var c = new List$1(Series.$, 0);
        if (b) {
            if (this.ek) {
                var d = 1;
                if (this.gh == null) {
                    if (this.j7 != null || this.j8 != null || this.j6 != null || this.j5 != null) {
                        try {
                            for (var _c = __values(fromEnum(this.dataChart.series)), _d = _c.next(); !_d.done; _d = _c.next()) {
                                var e = _d.value;
                                var f = this.cq();
                                this.b1.setTargetSeries(f, e);
                                this.b1.setCollisionChannel(f, "MainChartCollisionChannel");
                                this.s2(f, e, this.bb.dataSeries._inner[d - 1]);
                                f.name = a + getInstanceType(f).typeName + d.toString();
                                c.add(f);
                                d++;
                            }
                        }
                        catch (e_5_1) {
                            e_5 = { error: e_5_1 };
                        }
                        finally {
                            try {
                                if (_d && !_d.done && (_a = _c.return))
                                    _a.call(_c);
                            }
                            finally {
                                if (e_5)
                                    throw e_5.error;
                            }
                        }
                        ;
                    }
                    else {
                        var g = this.cq();
                        this.q4(g, this.f3);
                        g.name = a + getInstanceType(g).typeName + d.toString();
                        c.add(g);
                    }
                }
                else {
                    var h = this.cq();
                    this.s2(h, null, this.bb.dataSeries._inner[d - 1]);
                    h.name = a + getInstanceType(h).typeName + d.toString();
                    c.add(h);
                }
            }
        }
        switch (this.a6) {
            case 0:
            case 4:
            case 3:
            case 2:
                {
                    var i = this.cs();
                    this.b1.setCrosshairThickness(i, this.gm);
                    this.b1.setCrosshairUseInterpolation(i, !this.em);
                    this.b1.setCrosshairHorizontalLineVisibility(i, this.fp() ? 0 : 1);
                    this.b1.setCrosshairHorizontalLineStroke(i, this.td);
                    this.b1.setCrosshairVerticalLineVisibility(i, this.fq() ? 0 : 1);
                    this.b1.setCrosshairVerticalLineStroke(i, this.te);
                    this.b1.setCrosshairOnAxesEnabled(i, this.el);
                    this.b1.setCrosshairXAxisBackground(i, this.s9);
                    this.b1.setCrosshairXAxisForeground(i, this.ta);
                    this.b1.setCrosshairYAxisBackground(i, this.tb);
                    this.b1.setCrosshairYAxisForeground(i, this.tc);
                    this.b1.setCrosshairXAxisPrecision(i, this.i8);
                    this.b1.setCrosshairYAxisPrecision(i, this.i9);
                    c.add(i);
                    break;
                }
            case 1:
                {
                    break;
                }
        }
        if (this.es) {
            var j = this.cu();
            this.b1.setFinalValueBackground(j, this.to);
            this.b1.setFinalValueForeground(j, this.tp);
            this.b1.setFinalValuePrecision(j, this.jc);
            c.add(j);
        }
        if (b) {
            switch (this.dg) {
                case 1:
                    {
                        var k = this.cv();
                        c.add(k);
                        break;
                    }
                case 2:
                    {
                        var l = this.cr();
                        c.add(l);
                        break;
                    }
                case 4:
                    {
                        var m = this.ct();
                        c.add(m);
                        break;
                    }
                case 3:
                    {
                        this.rc(function (n) { return n.et = false; });
                        break;
                    }
                case 0:
                    {
                        this.rc(function (n) { return n.et = true; });
                        break;
                    }
            }
        }
        try {
            for (var _e = __values(fromEnum(c)), _f = _e.next(); !_f.done; _f = _e.next()) {
                var n = _f.value;
                if (stringIsNullOrEmpty(n.name) == false) {
                    continue;
                }
                n.name = a + getInstanceType(n).typeName;
            }
        }
        catch (e_6_1) {
            e_6 = { error: e_6_1 };
        }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return))
                    _b.call(_e);
            }
            finally {
                if (e_6)
                    throw e_6.error;
            }
        }
        return c;
    };
    DomainChart.prototype.q4 = function (a, b) {
        this.b1.setIsAutoCalloutBehaviorEnabled(a, true);
        this.b1.setGreedyCollisionMode(a, true);
        this.b1.setUseDedicatedLanes(a, b);
    };
    DomainChart.prototype.s2 = function (a, b, c) {
        a.itemsSource = this.gh != null ? this.gh : b.itemsSource;
        this.b1.setXMemberPath(a, this.j7);
        this.b1.setYMemberPath(a, this.j8);
        this.b1.setLabelMemberPath(a, this.j6);
        this.b1.setContentMemberPath(a, this.j5);
        if (this.ah != null) {
            this.b1.setCalloutsAllowedPositions(a, this.ah);
        }
    };
    DomainChart.prototype.sz = function () {
        this.s0(this.dataChart);
    };
    DomainChart.prototype.s0 = function (a) {
        var e_7, _a;
        var _this = this;
        if (a != null && a == this.dataChart) {
            this.sy();
        }
        if (a == null || a.series.count == 0) {
            return;
        }
        this.rc(function (b) {
            if (_this.fm(b) && _this.b1.isCalloutLayer(b)) {
                _this.b1.removeCalloutStyleUpdating(b, runOn(_this, _this.sk));
            }
            if (_this.fm(b) && _this.b1.isCalloutLayer(b)) {
                _this.b1.removeCalloutRenderStyleUpdating(b, runOn(_this, _this.sj));
            }
            _this.ss(b);
        });
        try {
            for (var _b = __values(fromEnum(a.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var b = _c.value;
                this.s1(b);
            }
        }
        catch (e_7_1) {
            e_7 = { error: e_7_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_7)
                    throw e_7.error;
            }
        }
        a.series.clear();
    };
    DomainChart.prototype.s1 = function (a) {
        a.itemsSource = null;
        a.legend = null;
        a.kx();
    };
    DomainChart.prototype.r8 = function (a, b) {
        if (this.dataChart == null) {
            return;
        }
        var c = b.oldItems == null ? "null" : b.oldItems.count.toString();
        var d = b.newItems == null ? "null" : b.newItems.count.toString();
        if (this.ft) {
            return;
        }
        var e = this.si(runOn(this, this.q8), this.ft);
        this.ft = e.p1;
    };
    DomainChart.prototype.q8 = function () {
        this.sx();
    };
    DomainChart.prototype.ud = function (a) {
        return ArrayExtension.getModulus$1(Brush.$, this.y, a);
    };
    DomainChart.prototype.ug = function (a) {
        return ArrayExtension.getModulus$1(Brush.$, this.z, a);
    };
    DomainChart.prototype.ue = function (a) {
        return ArrayExtension.getModulus$1(Brush.$, this.ac, a);
    };
    DomainChart.prototype.uf = function (a) {
        return ArrayExtension.getModulus$1(Brush.$, this.ad, a);
    };
    DomainChart.prototype.uo = function (a) {
        var b = new Color();
        if (this.y == null || this.y.count == 0) {
            b = ArrayExtension.getModulus$1(Color.$, this.ga, a);
        }
        else {
            var c = ArrayExtension.getModulus$1(Brush.$, this.y, a);
            if (c == null) {
                b = ArrayExtension.getModulus$1(Color.$, this.ga, a);
            }
            else {
                b = ColorUtil.q(c);
            }
        }
        return b;
    };
    DomainChart.prototype.ee = function (a) {
        var b = new ObservableColorCollection();
        b.add(ColorUtil.v(a, 0.5));
        b.add(a);
        return b;
    };
    DomainChart.prototype.ab = function (a) {
        var b = this.ee(a);
        var c = BrushCollectionUtil.a(b);
        return c;
    };
    Object.defineProperty(DomainChart.prototype, "ga", {
        get: function () {
            if (this.f8 != null) {
                return this.f8;
            }
            this.f8 = new List$1(Color.$, 0);
            this.f8.add(ColorUtil.r("#8BDC5C"));
            this.f8.add(ColorUtil.r("#8961A9"));
            this.f8.add(ColorUtil.r("#6DB1FF"));
            this.f8.add(ColorUtil.r("#82E9D9"));
            this.f8.add(ColorUtil.r("#EA3C63"));
            this.f8.add(ColorUtil.r("#735656"));
            this.f8.add(ColorUtil.r("#F8CE4F"));
            this.f8.add(ColorUtil.r("#A8A8B7"));
            this.f8.add(ColorUtil.r("#E051A9"));
            this.f8.add(ColorUtil.r("#FF903B"));
            return this.f8;
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.get_f3 = function () {
        return false;
    };
    Object.defineProperty(DomainChart.prototype, "f3", {
        get: function () {
            return this.get_f3();
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.jv = function () {
        if (this.dataChart == null) {
            return null;
        }
        return this.dataChart.vw();
    };
    DomainChart.prototype.rw = function (a, b) {
    };
    DomainChart.prototype.rx = function (a, b, c) {
    };
    DomainChart.prototype.cl = function (a) {
        if (a == 2) {
            return 3;
        }
        else if (a == 12) {
            return 13;
        }
        else if (a == 6) {
            return 7;
        }
        else if (a == 8) {
            return 9;
        }
        else if (a == 11) {
            return 12;
        }
        else if (a == 1) {
            return 1;
        }
        else if (a == 7) {
            return 8;
        }
        else if (a == 10) {
            return 11;
        }
        else if (a == 4) {
            return 5;
        }
        else if (a == 5) {
            return 6;
        }
        else if (a == 9) {
            return 10;
        }
        else if (a == 3) {
            return 4;
        }
        else if (a == 13) {
            return 0;
        }
        return 2;
    };
    DomainChart.prototype.attachDataLegend = function (a) {
        this.q3(a);
    };
    DomainChart.prototype.q3 = function (a) {
        this.b4 = a;
        if (this.dataChart != null) {
            if (!this.ev) {
                this.ev = true;
                this.dataChart.attachDataLegend(a);
            }
        }
    };
    DomainChart.prototype.detachDataLegend = function (a) {
        this.q7(a);
    };
    DomainChart.prototype.q7 = function (a) {
        if (this.dataChart != null) {
            this.ev = false;
            this.dataChart.detachDataLegend(a);
        }
        this.b4 = null;
    };
    DomainChart.prototype.getDataLegendSeries = function () {
        return this.p();
    };
    DomainChart.prototype.p = function () {
        if (this.dataChart != null) {
            return this.dataChart.getDataLegendSeries();
        }
        else {
            return new Array(0);
        }
    };
    DomainChart.prototype.r2 = function (source_, a, b, c) {
        if (this.bb != null) {
            this.bb.notifySetItem(source_, a, b, c);
        }
        if (this.dataChart != null) {
            this.dataChart.mi(source_, a, b, c);
        }
    };
    DomainChart.prototype.ry = function (source_) {
        if (this.bb != null) {
            this.bb.notifyClearItems(source_);
        }
        if (this.dataChart != null) {
            this.dataChart.l9(source_);
        }
    };
    DomainChart.prototype.rz = function (source_, a, b) {
        if (this.bb != null) {
            this.bb.notifyInsertItem(source_, a, b);
        }
        if (this.dataChart != null) {
            this.dataChart.mg(source_, a, b);
        }
    };
    DomainChart.prototype.r0 = function (source_, a, b) {
        if (this.bb != null) {
            this.bb.notifyRemoveItem(source_, a, b);
        }
        if (this.dataChart != null) {
            this.dataChart.mh(source_, a, b);
        }
    };
    Object.defineProperty(DomainChart.prototype, "bt", {
        get: function () {
            return this.bs;
        },
        set: function (a) {
            var b = this.bs;
            this.bs = a;
            if (b != this.bs) {
                this.sd("DataToolTipGroupingMode", enumGetBox(DataToolTipLayerGroupingMode_$type, b), enumGetBox(DataToolTipLayerGroupingMode_$type, this.bs));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "hz", {
        get: function () {
            return this.gp;
        },
        set: function (a) {
            var b = this.gp;
            this.gp = a;
            if (b != this.gp) {
                this.sd("DataToolTipPositionOffsetX", b, this.gp);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "h0", {
        get: function () {
            return this.gq;
        },
        set: function (a) {
            var b = this.gq;
            this.gq = a;
            if (b != this.gq) {
                this.sd("DataToolTipPositionOffsetY", b, this.gq);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "hx", {
        get: function () {
            return this.gn;
        },
        set: function (a) {
            var b = this.gn;
            this.gn = a;
            if (b != this.gn) {
                this.sd("DataToolTipDefaultPositionOffsetX", b, this.gn);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "hy", {
        get: function () {
            return this.go;
        },
        set: function (a) {
            var b = this.go;
            this.go = a;
            if (b != this.go) {
                this.sd("DataToolTipDefaultPositionOffsetY", b, this.go);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "bp", {
        get: function () {
            return this.bo;
        },
        set: function (a) {
            var b = this.bo;
            this.bo = a;
            if (b != this.bo) {
                this.sd("DataToolTipGroupedPositionModeX", enumGetBox(DataTooltipGroupedPositionX_$type, b), enumGetBox(DataTooltipGroupedPositionX_$type, this.bo));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "br", {
        get: function () {
            return this.bq;
        },
        set: function (a) {
            var b = this.bq;
            this.bq = a;
            if (b != this.bq) {
                this.sd("DataToolTipGroupedPositionModeY", enumGetBox(DataTooltipGroupedPositionY_$type, b), enumGetBox(DataTooltipGroupedPositionY_$type, this.bq));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ff", {
        get: function () {
            return this.eo;
        },
        set: function (a) {
            var b = this.eo;
            this.eo = a;
            if (b != this.eo) {
                this.sd(DomainChart.mk, b, this.eo);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "m", {
        get: function () {
            return this.e;
        },
        set: function (a) {
            var b = this.e;
            this.e = a;
            if (b != this.e) {
                this.sd("DataToolTipIncludedSeries", b, this.e);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "j", {
        get: function () {
            return this.b;
        },
        set: function (a) {
            var b = this.b;
            this.b = a;
            if (b != this.b) {
                this.sd("DataToolTipExcludedSeries", b, this.b);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "l", {
        get: function () {
            return this.d;
        },
        set: function (a) {
            var b = this.d;
            this.d = a;
            if (b != this.d) {
                this.sd("DataToolTipIncludedColumns", b, this.d);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "i", {
        get: function () {
            return this.a;
        },
        set: function (a) {
            var b = this.a;
            this.a = a;
            if (b != this.a) {
                this.sd("DataToolTipExcludedColumns", b, this.a);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "a9", {
        get: function () {
            return this.a8;
        },
        set: function (a) {
            var b = this.a8;
            this.a8 = a;
            if (b != this.a8) {
                this.sd("DataToolTipValueFormatAbbreviation", enumGetBox(DataAbbreviationMode_$type, b), enumGetBox(DataAbbreviationMode_$type, this.a8));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "jj", {
        get: function () {
            return this.ja;
        },
        set: function (a) {
            var b = this.ja;
            this.ja = a;
            if (b != this.ja) {
                this.sd("DataToolTipValueFormatMaxFractions", b, this.ja);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "jk", {
        get: function () {
            return this.jb;
        },
        set: function (a) {
            var b = this.jb;
            this.jb = a;
            if (b != this.jb) {
                this.sd("DataToolTipValueFormatMinFractions", b, this.jb);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "bn", {
        get: function () {
            return this.bm;
        },
        set: function (a) {
            var b = this.bm;
            this.bm = a;
            if (b != this.bm) {
                this.sd("DataToolTipValueFormatMode", enumGetBox(DataLegendValueMode_$type, b), enumGetBox(DataLegendValueMode_$type, this.bm));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "nc", {
        get: function () {
            return this.kg;
        },
        set: function (a) {
            var b = this.kg;
            this.kg = a;
            if (b != this.kg) {
                this.sd("DataToolTipValueFormatCulture", b, this.kg);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "fg", {
        get: function () {
            return this.ep;
        },
        set: function (a) {
            var b = this.ep;
            this.ep = a;
            if (b != this.ep) {
                this.sd("DataToolTipValueFormatUseGrouping", b, this.ep);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ni", {
        get: function () {
            return this.kh;
        },
        set: function (a) {
            var b = this.kh;
            this.kh = a;
            if (b != this.kh) {
                this.sd("DataToolTipValueFormatString", b, this.kh);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "n", {
        get: function () {
            return this.f;
        },
        set: function (a) {
            var b = this.f;
            this.f = a;
            if (b != this.f) {
                this.sd("DataToolTipValueFormatSpecifiers", b, this.f);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "va", {
        get: function () {
            return this.u0;
        },
        set: function (a) {
            var b = this.u0;
            this.u0 = a;
            if (b != this.u0) {
                this.sd("DataToolTipValueRowMargin", b, this.u0);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "fh", {
        get: function () {
            return this.eq;
        },
        set: function (a) {
            var b = this.eq;
            this.eq = a;
            if (b != this.eq) {
                this.sd("DataToolTipValueRowVisible", b, this.eq);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "nr", {
        get: function () {
            return this.ki;
        },
        set: function (a) {
            var b = this.ki;
            this.ki = a;
            if (b != this.ki) {
                this.sd("DataToolTipValueTextWhenMissingData", b, this.ki);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "fi", {
        get: function () {
            return this.er;
        },
        set: function (a) {
            var b = this.er;
            this.er = a;
            if (b != this.er) {
                this.sd("DataToolTipValueTextUseSeriesColors", b, this.er);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "vb", {
        get: function () {
            return this.u1;
        },
        set: function (a) {
            var b = this.u1;
            this.u1 = a;
            if (b != this.u1) {
                this.sd("DataToolTipValueTextMargin", b, this.u1);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ua", {
        get: function () {
            return this.tn;
        },
        set: function (a) {
            var b = this.tn;
            this.tn = a;
            if (b != this.tn) {
                this.sd("DataToolTipValueTextColor", b, this.tn);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ed", {
        get: function () {
            return this.d4;
        },
        set: function (a) {
            var b = this.d4;
            this.d4 = a;
            if (b != this.d4) {
                this.sd("DataToolTipValueTextStyle", b, this.d4);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "l2", {
        get: function () {
            return this.ka;
        },
        set: function (a) {
            var b = this.ka;
            this.ka = a;
            if (b != this.ka) {
                this.sd("DataToolTipHeaderFormatString", b, this.ka);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "k", {
        get: function () {
            return this.c;
        },
        set: function (a) {
            var b = this.c;
            this.c = a;
            if (b != this.c) {
                this.sd("DataToolTipHeaderFormatSpecifiers", b, this.c);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ly", {
        get: function () {
            return this.j9;
        },
        set: function (a) {
            var b = this.j9;
            this.j9 = a;
            if (b != this.j9) {
                this.sd("DataToolTipHeaderFormatCulture", b, this.j9);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "bd", {
        get: function () {
            return this.bc;
        },
        set: function (a) {
            var b = this.bc;
            this.bc = a;
            if (b != this.bc) {
                this.sd("DataToolTipHeaderFormatDate", enumGetBox(DataLegendHeaderDateMode_$type, b), enumGetBox(DataLegendHeaderDateMode_$type, this.bc));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "bf", {
        get: function () {
            return this.be;
        },
        set: function (a) {
            var b = this.be;
            this.be = a;
            if (b != this.be) {
                this.sd("DataToolTipHeaderFormatTime", enumGetBox(DataLegendHeaderTimeMode_$type, b), enumGetBox(DataLegendHeaderTimeMode_$type, this.be));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "l7", {
        get: function () {
            return this.kb;
        },
        set: function (a) {
            var b = this.kb;
            this.kb = a;
            if (b != this.kb) {
                this.sd("DataToolTipHeaderText", b, this.kb);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "t2", {
        get: function () {
            return this.tf;
        },
        set: function (a) {
            var b = this.tf;
            this.tf = a;
            if (b != this.tf) {
                this.sd("DataToolTipHeaderTextColor", b, this.tf);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "u4", {
        get: function () {
            return this.uu;
        },
        set: function (a) {
            var b = this.uu;
            this.uu = a;
            if (b != this.uu) {
                this.sd("DataToolTipHeaderTextMargin", b, this.uu);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "u3", {
        get: function () {
            return this.ut;
        },
        set: function (a) {
            var b = this.ut;
            this.ut = a;
            if (b != this.ut) {
                this.sd("DataToolTipHeaderRowMargin", b, this.ut);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "fe", {
        get: function () {
            return this.en;
        },
        set: function (a) {
            var b = this.en;
            this.en = a;
            if (b != this.en) {
                this.sd("DataToolTipHeaderRowVisible", b, this.en);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "d5", {
        get: function () {
            return this.dw;
        },
        set: function (a) {
            var b = this.dw;
            this.dw = a;
            if (b != this.dw) {
                this.sd("DataToolTipHeaderTextStyle", b, this.dw);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "t5", {
        get: function () {
            return this.ti;
        },
        set: function (a) {
            var b = this.ti;
            this.ti = a;
            if (b != this.ti) {
                this.sd("DataToolTipSummaryTitleTextColor", b, this.ti);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "d8", {
        get: function () {
            return this.dz;
        },
        set: function (a) {
            var b = this.dz;
            this.dz = a;
            if (b != this.dz) {
                this.sd("DataToolTipSummaryTitleTextStyle", b, this.dz);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "bj", {
        get: function () {
            return this.bi;
        },
        set: function (a) {
            var b = this.bi;
            this.bi = a;
            if (b != this.bi) {
                this.sd("DataToolTipSummaryType", enumGetBox(DataLegendSummaryType_$type, b), enumGetBox(DataLegendSummaryType_$type, this.bi));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "mq", {
        get: function () {
            return this.kd;
        },
        set: function (a) {
            var b = this.kd;
            this.kd = a;
            if (b != this.kd) {
                this.sd("DataToolTipSummaryTitleText", b, this.kd);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "u7", {
        get: function () {
            return this.ux;
        },
        set: function (a) {
            var b = this.ux;
            this.ux = a;
            if (b != this.ux) {
                this.sd("DataToolTipSummaryTitleTextMargin", b, this.ux);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "u6", {
        get: function () {
            return this.uw;
        },
        set: function (a) {
            var b = this.uw;
            this.uw = a;
            if (b != this.uw) {
                this.sd("DataToolTipSummaryRowMargin", b, this.uw);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "t7", {
        get: function () {
            return this.tk;
        },
        set: function (a) {
            var b = this.tk;
            this.tk = a;
            if (b != this.tk) {
                this.sd("DataToolTipSummaryValueTextColor", b, this.tk);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ea", {
        get: function () {
            return this.d1;
        },
        set: function (a) {
            var b = this.d1;
            this.d1 = a;
            if (b != this.d1) {
                this.sd("DataToolTipSummaryValueTextStyle", b, this.d1);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ml", {
        get: function () {
            return this.kc;
        },
        set: function (a) {
            var b = this.kc;
            this.kc = a;
            if (b != this.kc) {
                this.sd("DataToolTipSummaryLabelText", b, this.kc);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "t4", {
        get: function () {
            return this.th;
        },
        set: function (a) {
            var b = this.th;
            this.th = a;
            if (b != this.th) {
                this.sd("DataToolTipSummaryLabelTextColor", b, this.th);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "d7", {
        get: function () {
            return this.dy;
        },
        set: function (a) {
            var b = this.dy;
            this.dy = a;
            if (b != this.dy) {
                this.sd("DataToolTipSummaryLabelTextStyle", b, this.dy);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "mw", {
        get: function () {
            return this.ke;
        },
        set: function (a) {
            var b = this.ke;
            this.ke = a;
            if (b != this.ke) {
                this.sd("DataToolTipSummaryUnitsText", b, this.ke);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "t6", {
        get: function () {
            return this.tj;
        },
        set: function (a) {
            var b = this.tj;
            this.tj = a;
            if (b != this.tj) {
                this.sd("DataToolTipSummaryUnitsTextColor", b, this.tj);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "d9", {
        get: function () {
            return this.d0;
        },
        set: function (a) {
            var b = this.d0;
            this.d0 = a;
            if (b != this.d0) {
                this.sd("DataToolTipSummaryUnitsTextStyle", b, this.d0);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "u2", {
        get: function () {
            return this.us;
        },
        set: function (a) {
            var b = this.us;
            this.us = a;
            if (b != this.us) {
                this.sd("DataToolTipBadgeMargin", b, this.us);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "cd", {
        get: function () {
            return this.cb;
        },
        set: function (a) {
            var b = this.cb;
            this.cb = a;
            if (b != this.cb) {
                this.sd("DataToolTipBadgeShape", enumGetBox(LegendItemBadgeShape_$type, b), enumGetBox(LegendItemBadgeShape_$type, this.cb));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "bl", {
        get: function () {
            return this.bk;
        },
        set: function (a) {
            var b = this.bk;
            this.bk = a;
            if (b != this.bk) {
                this.sd("DataToolTipUnitsDisplayMode", enumGetBox(DataLegendUnitsMode_$type, b), enumGetBox(DataLegendUnitsMode_$type, this.bk));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "m6", {
        get: function () {
            return this.kf;
        },
        set: function (a) {
            var b = this.kf;
            this.kf = a;
            if (b != this.kf) {
                this.sd("DataToolTipUnitsText", b, this.kf);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "t9", {
        get: function () {
            return this.tm;
        },
        set: function (a) {
            var b = this.tm;
            this.tm = a;
            if (b != this.tm) {
                this.sd("DataToolTipUnitsTextColor", b, this.tm);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "u9", {
        get: function () {
            return this.uz;
        },
        set: function (a) {
            var b = this.uz;
            this.uz = a;
            if (b != this.uz) {
                this.sd("DataToolTipUnitsTextMargin", b, this.uz);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ec", {
        get: function () {
            return this.d3;
        },
        set: function (a) {
            var b = this.d3;
            this.d3 = a;
            if (b != this.d3) {
                this.sd("DataToolTipUnitsTextStyle", b, this.d3);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "u8", {
        get: function () {
            return this.uy;
        },
        set: function (a) {
            var b = this.uy;
            this.uy = a;
            if (b != this.uy) {
                this.sd("DataToolTipTitleTextMargin", b, this.uy);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "t8", {
        get: function () {
            return this.tl;
        },
        set: function (a) {
            var b = this.tl;
            this.tl = a;
            if (b != this.tl) {
                this.sd("DataToolTipTitleTextColor", b, this.tl);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "eb", {
        get: function () {
            return this.d2;
        },
        set: function (a) {
            var b = this.d2;
            this.d2 = a;
            if (b != this.d2) {
                this.sd("DataToolTipTitleTextStyle", b, this.d2);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "bh", {
        get: function () {
            return this.bg;
        },
        set: function (a) {
            var b = this.bg;
            this.bg = a;
            if (b != this.bg) {
                this.sd("DataToolTipLabelDisplayMode", enumGetBox(DataLegendLabelMode_$type, b), enumGetBox(DataLegendLabelMode_$type, this.bg));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "t3", {
        get: function () {
            return this.tg;
        },
        set: function (a) {
            var b = this.tg;
            this.tg = a;
            if (b != this.tg) {
                this.sd("DataToolTipLabelTextColor", b, this.tg);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "u5", {
        get: function () {
            return this.uv;
        },
        set: function (a) {
            var b = this.uv;
            this.uv = a;
            if (b != this.uv) {
                this.sd("DataToolTipLabelTextMargin", b, this.uv);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "d6", {
        get: function () {
            return this.dx;
        },
        set: function (a) {
            var b = this.dx;
            this.dx = a;
            if (b != this.dx) {
                this.sd("DataToolTipLabelTextStyle", b, this.dx);
            }
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.sm = function (a) {
        if (this.seriesAdded != null && a != null) {
            this.seriesAdded(this, new ChartSeriesEventArgs(a));
        }
    };
    DomainChart.prototype.ss = function (a) {
        if (this.seriesRemoved != null && a != null) {
            this.seriesRemoved(this, new ChartSeriesEventArgs(a));
        }
    };
    DomainChart.prototype.so = function (a, b) {
        if (this.seriesPointerEnter != null && a != null) {
            this.seriesPointerEnter(this, new DomainChartSeriesPointerEventArgs(a, b));
        }
    };
    DomainChart.prototype.sp = function (a, b) {
        if (this.seriesPointerLeave != null && a != null) {
            this.seriesPointerLeave(this, new DomainChartSeriesPointerEventArgs(a, b));
        }
    };
    DomainChart.prototype.sq = function (a, b) {
        if (this.seriesPointerMove != null && a != null) {
            this.seriesPointerMove(this, new DomainChartSeriesPointerEventArgs(a, b));
        }
    };
    DomainChart.prototype.sn = function (a, b) {
        if (this.seriesPointerDown != null && a != null) {
            this.seriesPointerDown(this, new DomainChartSeriesPointerEventArgs(a, b));
        }
    };
    DomainChart.prototype.sr = function (a, b) {
        if (this.seriesPointerUp != null && a != null) {
            this.seriesPointerUp(this, new DomainChartSeriesPointerEventArgs(a, b));
        }
    };
    DomainChart.prototype.sk = function (a, b) {
        if (this.calloutStyleUpdating != null && a != null) {
            this.calloutStyleUpdating(this, b);
        }
    };
    DomainChart.prototype.sj = function (a, b) {
        if (this.calloutRenderStyleUpdating != null && a != null) {
            this.calloutRenderStyleUpdating(this, b);
        }
    };
    DomainChart.prototype.sh = function (a) {
        var _this = this;
        if (!this.gc.contains(a)) {
            this.gc.add(a);
            var b = false;
            var c = this.si(function () {
                a();
                _this.gc.remove(a);
            }, b);
            b = c.p1;
        }
    };
    DomainChart.prototype.si = function (a, b) {
        if (!b) {
            b = true;
            if (this.ju != null) {
                this.ju.setTimeout(a, 0);
            }
            else {
                this.ef = a;
            }
        }
        return {
            p1: b
        };
    };
    DomainChart.prototype.get_fx = function () {
        return true;
    };
    Object.defineProperty(DomainChart.prototype, "fx", {
        get: function () {
            return this.get_fx();
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.rm = function (a) {
        var _this = this;
        var b = a == this.dataChart;
        if (b) {
            a.ag = this.y;
        }
        if (b) {
            a.aj = this.z;
        }
        a.ah = this.ac;
        a.ai = this.ad;
        a.be = this.cg;
        a.legend = this.legend;
        a.uk = this.fs;
        a.un = this.fy && this.fx;
        a.e9 = this.f2;
        if (b) {
            a.b5 = this.dc;
            a.b6 = this.dd;
            a.go = this.h1;
            a.so = this.uh;
            a.gp = this.h2;
            a.gq = this.h3;
            a.gr = this.h4;
            a.sp = this.ui;
            a.b2 = this.c9;
            a.d5 = this.fl;
            a.gs = this.h5;
            a.gt = this.h6;
            a.gu = this.h7;
            a.hb = this.iv;
            a.sx = this.um;
            a.hh = this.i1;
            a.hc = this.iw;
            a.hd = this.ix;
            a.sy = this.un;
            a.b7 = this.df;
            a.fj = this.f5;
            a.he = this.iy;
            a.hf = this.iz;
            a.hg = this.i0;
            a.hk = this.i2;
            a.hl = this.i3;
            a.hn = this.i5;
            a.hm = this.i4;
        }
        a.t5 = this.c5;
        a.t8 = this.c7;
        if (this.b4 != null) {
            if (!this.ev) {
                this.q3(this.b4);
            }
        }
        if (a.bv != this.c1 || a.bt != this.cz) {
            a.cu.b4(this.ju);
            a.bv = this.c1;
            a.bt = this.cz;
        }
        a.ty = this.a5();
        if (!isNaN_(this.id)) {
            a.vp = this.id;
        }
        if (!isNaN_(this.ig)) {
            a.vr = this.ig;
        }
        if (!isNaN_(this.ie)) {
            a.vq = this.ie;
        }
        if (!isNaN_(this.ic)) {
            a.vo = this.ic;
        }
        a.bb = this.b8;
        a.seriesMouseEnter = delegateCombine(a.seriesMouseEnter, function (c, d) { return _this.so(d.series, d.item); });
        a.seriesMouseLeave = delegateCombine(a.seriesMouseLeave, function (c, d) { return _this.sp(d.series, d.item); });
        a.seriesMouseMove = delegateCombine(a.seriesMouseMove, function (c, d) { return _this.sq(d.series, d.item); });
        a.seriesMouseLeftButtonDown = delegateCombine(a.seriesMouseLeftButtonDown, function (c, d) { return _this.sn(d.series, d.item); });
        a.seriesMouseLeftButtonUp = delegateCombine(a.seriesMouseLeftButtonUp, function (c, d) { return _this.sr(d.series, d.item); });
        if (b) {
            a.tp = this.ur;
        }
        if (b) {
            a.kg = this.pw;
        }
        a.r8 = this.s8;
        if (b) {
            a.j4 = this.pl;
        }
        a.r7 = this.s7;
        a.ug = this.e7;
        a.ds = this.e8;
        a.gw = this.h8;
        a.g1 = this.ii;
        a.ha = this.it;
        a.gj = this.hv;
        if (a == this.dataChart) {
            this.sx();
        }
        this.rn(a);
        this.ro(a);
    };
    DomainChart.prototype.af = function (a) {
        var e_8, _a;
        if (!this.f1 || !this.f4 || this.itemsSource != null) {
            return a;
        }
        if (a == null) {
            return null;
        }
        var b = new BrushCollection();
        try {
            for (var _b = __values(fromEnum(a)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var c = _c.value;
                var d = BrushUtil.r(c);
                b.add(d);
            }
        }
        catch (e_8_1) {
            e_8 = { error: e_8_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_8)
                    throw e_8.error;
            }
        }
        return b;
    };
    DomainChart.prototype.uj = function (a) {
        if (!this.f1 || !this.f4 || this.itemsSource != null) {
            return a;
        }
        var b = BrushUtil.g(0, 0, 0, 0);
        return b;
    };
    DomainChart.prototype.rs = function (a, b) {
        if (!isNaN_(this.ih)) {
            a.gv = this.ih;
        }
        if (!isNaN_(this.io) && !a.dc) {
            a.g1 = this.io;
        }
        if (!isNaN_(this.hw) && a.dc) {
            a.g1 = this.hw;
        }
        a.legendItemBadgeShape = this.ce;
        a.a9 = this.ca;
        a.bt = this.c3;
        a.m3(this.ck);
        a.m2(this.ci);
        a.gs = this.h9;
        if (!isNaN_(this.ia)) {
            a.m4(this.ia);
        }
        if (!isNaN_(this.hu)) {
            a.f1 = this.hu;
        }
        if (a.isUsableInLegend) {
            a.legend = this.legend;
        }
        if (typeCast(IUnknownValuePlotting_$type, a) !== null) {
            a.unknownValuePlotting = this.dl;
        }
        a.dx = this.fu;
        if (this.fm(a) && this.b1.isCalloutLayer(a)) {
            this.b1.setCalloutStyleUpdatingEventEnabled(a, this.fa);
            this.b1.addCalloutStyleUpdating(a, runOn(this, this.sk));
        }
        if (this.fm(a) && this.b1.isCalloutLayer(a)) {
            this.b1.setCalloutRenderStyleUpdatingEventEnabled(a, this.fa);
            this.b1.addCalloutRenderStyleUpdating(a, runOn(this, this.sj));
        }
        if (this.fm(a) && this.b1.isDataToolTipLayer(a)) {
            this.q0(a);
        }
        this.q1(a, b);
        this.q2(a, b);
        this.rt(a, b);
        this.ru(a, b);
        this.sm(a);
    };
    Object.defineProperty(DomainChart.prototype, "e9", {
        get: function () {
            return this.ei;
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.q9 = function () {
        if (!this.ei) {
            this.ei = true;
            this.rj();
        }
    };
    DomainChart.prototype.rj = function () {
        this.rk();
        this.rl();
    };
    DomainChart.prototype.st = function (a) {
        if (this.ev && this.b4 != null) {
            this.ev = false;
            if (a != null) {
                a.detachDataLegend(this.b4);
            }
        }
        this.s0(a);
    };
    DomainChart.prototype.q2 = function (a, b) {
        var c = typeCast(ITrendLineSeries_$type, a);
        if (c != null) {
            c.trendLineBrush = ArrayExtension.getModulus$1(Brush.$, this.ag, b);
            c.trendLineThickness = this.iu;
            c.trendLineType = this.dj;
            c.trendLinePeriod = this.jo;
        }
    };
    DomainChart.prototype.cn = function (a, b) {
        if (this.cp == null || this.cp.count == 0) {
            if (this.gd == null || this.gd.count == 0) {
                return a != null && a.d3 ? 1 : 2;
            }
            var c = ArrayExtension.getModulus$1(MarkerType_$type, this.gd, b);
            if (c == 0 && a != null) {
                c = a.d3 ? 1 : 2;
                if (c == 2) {
                    c = this.cm(a);
                }
            }
            if (c == 2) {
                if (a == null) {
                    return 1;
                }
                else {
                    return 2;
                }
            }
            return c;
        }
        return ArrayExtension.getModulus$1(MarkerType_$type, this.cp, b);
    };
    DomainChart.prototype.cm = function (a) {
        return 2;
    };
    DomainChart.prototype.jz = function () {
        if (this.itemsSource != null) {
            return this.itemsSource;
        }
        if (this.f1) {
            return this.gj();
        }
        return null;
    };
    DomainChart.prototype.get_fr = function () {
        if (this.itemsSource == null && this.f1) {
            if (this.gj() != null) {
                return true;
            }
        }
        return false;
    };
    Object.defineProperty(DomainChart.prototype, "fr", {
        get: function () {
            return this.get_fr();
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.gj = function () {
        return null;
    };
    DomainChart.prototype.sd = function (a, b, c) {
        var _this = this;
        if (this.propertyChanged != null) {
            this.propertyChanged(this, new PropertyChangedEventArgs(a));
        }
        switch (a) {
            case "DataChart":
                this.st(typeCast(XamDataChart.$, b));
                this.rm(typeCast(XamDataChart.$, c));
                break;
            case "ShouldUseSkeletonStyleForMockData":
            case "ShouldDisplayMockData":
                this.actualItemsSource = this.jz();
                this.y = this.af(this.aa);
                this.z = this.af(this.ae);
                break;
            case "ActualBrushes":
                this.r7(function (d) { return d.ag = _this.y; }, true, a);
                break;
            case "ActualOutlines":
                this.r7(function (d) { return d.aj = _this.z; }, true, a);
                break;
            case "ActualItemsSource":
                if (this.f1) {
                    this.y = this.af(this.aa);
                    this.z = this.af(this.ae);
                }
                this.bb.itemsSource = this.actualItemsSource;
                break;
            case "ItemsSource":
                this.actualItemsSource = this.jz();
                break;
            case "IncludedProperties":
                this.bb.includedProperties = this.q;
                break;
            case "ExcludedProperties":
                this.bb.excludedProperties = this.o;
                break;
            case "Brushes":
                this.y = this.af(this.aa);
                break;
            case "Outlines":
                this.z = this.af(this.ae);
                break;
            case "Legend":
                this.r5(function (d) { return d.legend = _this.legend; });
                break;
            case "HighlightingMode":
                this.r5(function (d) { return d.bv = _this.c1; });
                break;
            case "HighlightingBehavior":
                this.r5(function (d) { return d.bt = _this.cz; });
                break;
            case "LegendHighlightingMode":
                this.r5(function (d) { return d.bb = _this.b8; });
                break;
            case "LegendItemBadgeShape":
                this.r5(function (d) { return d.bd = _this.ce; });
                break;
            case "LegendItemBadgeMode":
                this.r5(function (d) { return d.bc = _this.ca; });
                break;
            case "PlotAreaMarginLeft":
                this.r5(function (d) { return d.vp = _this.id; });
                break;
            case "PlotAreaMarginTop":
                this.r5(function (d) { return d.vr = _this.ig; });
                break;
            case "PlotAreaMarginRight":
                this.r5(function (d) { return d.vq = _this.ie; });
                break;
            case "PlotAreaMarginBottom":
                this.r5(function (d) { return d.vo = _this.ic; });
                break;
            case "ComputedPlotAreaMarginMode":
                this.r5(function (d) { return d.ty = _this.a5(); });
                break;
            case "IsHorizontalZoomEnabled":
                this.r5(function (d) { return d.uk = _this.fs; });
                break;
            case "IsVerticalZoomEnabled":
                this.r5(function (d) { return d.un = _this.fy; });
                break;
            case "WindowRect":
                this.r6(function (d) { return d.tp = _this.ur; }, false);
                break;
            case "WindowRectMinWidth":
                this.r6(function (d) { return d.hl = _this.i3; }, false);
                break;
            case "WindowRectMinHeight":
                this.r6(function (d) { return d.hk = _this.i2; }, false);
                break;
            case "WindowSizeMinWidth":
                this.r6(function (d) { return d.hn = _this.i5; }, false);
                break;
            case "WindowSizeMinHeight":
                this.r6(function (d) { return d.hm = _this.i4; }, false);
                break;
            case "Title":
                this.r6(function (d) { return d.kg = _this.pw; }, false);
                break;
            case "Subtitle":
                this.r6(function (d) { return d.j4 = _this.pl; }, false);
                break;
            case "TitleAlignment":
                this.r5(function (d) { return d.r8 = _this.s8; });
                break;
            case "SubtitleAlignment":
                this.r5(function (d) { return d.r7 = _this.s7; });
                break;
            case "UnknownValuePlotting":
                this.rc(function (d) {
                    if (typeCast(IUnknownValuePlotting_$type, d) !== null) {
                        d.unknownValuePlotting = _this.dl;
                    }
                });
                break;
            case "IsSeriesHighlightingEnabled":
                this.rc(function (d) { return d.dx = _this.fu; });
                break;
            case "Thickness":
                if (!isNaN_(this.io)) {
                    this.rg(function (d) { return d.g1 = _this.io; });
                }
                break;
            case "OutlineMode":
                this.rg(function (d) { return d.bt = _this.c3; });
                break;
            case "MarkerFillOpacity":
                this.rg(function (d) { return d.gs = _this.h9; });
                break;
            case "MarkerThickness":
                if (!isNaN_(this.ia)) {
                    this.rg(function (d) { return d.m4(_this.ia); });
                }
                break;
            case "MarkerOutlineMode":
                this.rg(function (d) { return d.m3(_this.ck); });
                break;
            case "MarkerFillMode":
                this.rg(function (d) { return d.m2(_this.ci); });
                break;
            case "Resolution":
                if (!isNaN_(this.ih)) {
                    this.rc(function (d) { return d.gv = _this.ih; });
                }
                break;
            case "AreaFillOpacity":
                if (!isNaN_(this.hu)) {
                    this.rc(function (d) { return d.f1 = _this.hu; });
                }
                break;
            case "ShouldAvoidAxisAnnotationCollisions":
                this.rb(function (d) {
                    d.ct = _this.f0;
                    d.cv = _this.f0;
                }, true);
                break;
            case "ShouldPanOnMaximumZoom":
                this.r5(function (d) { return d.e9 = _this.f2; });
                break;
            case "TrendLineBrushes":
            case "TrendLineType":
            case "TrendLineThickness":
            case "TrendLinePeriod":
                this.rd(function (d, e) { return _this.q2(d, e); });
                break;
            case "MarkerMaxCount":
                this.rh(function (d, e) { return _this.q1(d, e); });
                break;
            case "MarkerTypes":
                var d = typeCast(ObservableCollection$1.$.specialize(MarkerType_$type), b);
                if (d != null) {
                    d.collectionChanged = delegateRemove(d.collectionChanged, runOn(this, this.sb));
                }
                var e = typeCast(ObservableCollection$1.$.specialize(MarkerType_$type), c);
                if (e != null) {
                    e.collectionChanged = delegateCombine(e.collectionChanged, runOn(this, this.sb));
                }
                this.rh(function (f, g) { return _this.q1(f, g); });
                break;
            case "MarkerAutomaticBehavior":
                this.r5(function (f) { return f.be = _this.cg; });
                this.rh(function (f, g) { return _this.q1(f, g); });
                break;
            case "MarkerBrushes":
                this.r5(function (f) { return f.ah = _this.ac; });
                break;
            case "MarkerOutlines":
                this.r5(function (f) { return f.ai = _this.ad; });
                break;
            case "AlignsGridLinesToPixels":
                this.r5(function (f) { return f.ug = _this.e7; });
                break;
            case "AnimateSeriesWhenAxisRangeChanges":
                this.r5(function (f) { return f.ds = _this.e8; });
                break;
            case "ToolTipType":
            case "CrosshairsDisplayMode":
            case "CrosshairsSnapToData":
            case "CrosshairsLineVerticalStroke":
            case "CrosshairsLineHorizontalStroke":
            case "CrosshairsLineThickness":
            case "CrosshairsAnnotationXAxisBackground":
            case "CrosshairsAnnotationXAxisTextColor":
            case "CrosshairsAnnotationYAxisBackground":
            case "CrosshairsAnnotationYAxisTextColor":
            case "CrosshairsAnnotationEnabled":
            case "CrosshairsAnnotationXAxisPrecision":
            case "CrosshairsAnnotationYAxisPrecision":
            case "FinalValueAnnotationsVisible":
            case "FinalValueAnnotationsPrecision":
            case "FinalValueAnnotationsTextColor":
            case "FinalValueAnnotationsBackground":
            case "CalloutsVisible":
            case "CalloutsAllowedPositions":
            case "CalloutsItemsSource":
            case "CalloutsXMemberPath":
            case "CalloutsYMemberPath":
            case "CalloutsLabelMemberPath":
            case "CalloutsContentMemberPath":
                var f = this.si(runOn(this, this.q8), this.ft);
                this.ft = f.p1;
                break;
            case "DataToolTipGroupingMode":
            case "DataToolTipPositionOffsetX":
            case "DataToolTipPositionOffsetY":
            case "DataToolTipDefaultPositionOffsetX":
            case "DataToolTipDefaultPositionOffsetY":
            case "DataToolTipGroupedPositionModeX":
            case "DataToolTipGroupedPositionModeY":
            case DomainChart.mk:
            case "DataToolTipIncludedSeries":
            case "DataToolTipExcludedSeries":
            case "DataToolTipIncludedColumns":
            case "DataToolTipExcludedColumns":
            case "DataToolTipValueFormatAbbreviation":
            case "DataToolTipValueFormatMaxFractions":
            case "DataToolTipValueFormatMinFractions":
            case "DataToolTipValueFormatMode":
            case "DataToolTipValueFormatCulture":
            case "DataToolTipValueFormatUseGrouping":
            case "DataToolTipValueFormatString":
            case "DataToolTipValueFormatSpecifiers":
            case "DataToolTipValueRowMargin":
            case "DataToolTipValueRowVisible":
            case "DataToolTipValueTextWhenMissingData":
            case "DataToolTipValueTextUseSeriesColors":
            case "DataToolTipValueTextMargin":
            case "DataToolTipValueTextColor":
            case "DataToolTipValueTextStyle":
            case "DataToolTipHeaderFormatString":
            case "DataToolTipHeaderFormatSpecifiers":
            case "DataToolTipHeaderFormatCulture":
            case "DataToolTipHeaderFormatDate":
            case "DataToolTipHeaderFormatTime":
            case "DataToolTipHeaderText":
            case "DataToolTipHeaderTextColor":
            case "DataToolTipHeaderTextMargin":
            case "DataToolTipHeaderRowMargin":
            case "DataToolTipHeaderRowVisible":
            case "DataToolTipHeaderTextStyle":
            case "DataToolTipSummaryTitleTextColor":
            case "DataToolTipSummaryTitleTextStyle":
            case "DataToolTipSummaryType":
            case "DataToolTipSummaryTitleText":
            case "DataToolTipSummaryTitleTextMargin":
            case "DataToolTipSummaryRowMargin":
            case "DataToolTipSummaryValueTextColor":
            case "DataToolTipSummaryValueTextStyle":
            case "DataToolTipSummaryLabelText":
            case "DataToolTipSummaryLabelTextColor":
            case "DataToolTipSummaryLabelTextStyle":
            case "DataToolTipSummaryUnitsText":
            case "DataToolTipSummaryUnitsTextColor":
            case "DataToolTipSummaryUnitsTextStyle":
            case "DataToolTipBadgeMargin":
            case "DataToolTipBadgeShape":
            case "DataToolTipUnitsDisplayMode":
            case "DataToolTipUnitsText":
            case "DataToolTipUnitsTextColor":
            case "DataToolTipUnitsTextMargin":
            case "DataToolTipUnitsTextStyle":
            case "DataToolTipTitleTextMargin":
            case "DataToolTipTitleTextColor":
            case "DataToolTipTitleTextStyle":
            case "DataToolTipLabelDisplayMode":
            case "DataToolTipLabelTextColor":
            case "DataToolTipLabelTextMargin":
            case "DataToolTipLabelTextStyle":
                this.r9(a, b, c);
                break;
            case "HorizontalViewScrollbarMode":
                this.r5(function (g) { return g.b5 = _this.dc; });
                break;
            case "VerticalViewScrollbarMode":
                this.r5(function (g) { return g.b6 = _this.dd; });
                break;
            case "HorizontalViewScrollbarCornerRadius":
                this.r5(function (g) { return g.go = _this.h1; });
                break;
            case "HorizontalViewScrollbarFill":
                this.r5(function (g) { return g.so = _this.uh; });
                break;
            case "HorizontalViewScrollbarMaxOpacity":
                this.r5(function (g) { return g.gr = _this.h4; });
                break;
            case "HorizontalViewScrollbarOutline":
                this.r5(function (g) { return g.sp = _this.ui; });
                break;
            case "HorizontalViewScrollbarStrokeThickness":
                this.r5(function (g) { return g.gs = _this.h5; });
                break;
            case "VerticalViewScrollbarCornerRadius":
                this.r5(function (g) { return g.hb = _this.iv; });
                break;
            case "VerticalViewScrollbarFill":
                this.r5(function (g) { return g.sx = _this.um; });
                break;
            case "VerticalViewScrollbarMaxOpacity":
                this.r5(function (g) { return g.hd = _this.ix; });
                break;
            case "VerticalViewScrollbarOutline":
                this.r5(function (g) { return g.sy = _this.un; });
                break;
            case "VerticalViewScrollbarStrokeThickness":
                this.r5(function (g) { return g.he = _this.iy; });
                break;
            case "HorizontalViewScrollbarHeight":
                this.r5(function (g) { return g.gp = _this.h2; });
                break;
            case "HorizontalViewScrollbarInset":
                this.r5(function (g) { return g.gq = _this.h3; });
                break;
            case DomainChart.od:
                this.r5(function (g) { return g.d5 = _this.fl; });
                break;
            case "HorizontalViewScrollbarTrackStartInset":
                this.r5(function (g) { return g.gu = _this.h7; });
                break;
            case "HorizontalViewScrollbarTrackEndInset":
                this.r5(function (g) { return g.gt = _this.h6; });
                break;
            case "VerticalViewScrollbarPosition":
                this.r5(function (g) { return g.b7 = _this.df; });
                break;
            case "HorizontalViewScrollbarPosition":
                this.r5(function (g) { return g.b2 = _this.c9; });
                break;
        }
        this.se(a, b, c);
        this.sf(a, b, c);
    };
    DomainChart.prototype.r9 = function (a, b, c) {
        var _this = this;
        if (!this.f6.containsKey(a)) {
            this.f7.add(a);
            this.f6.addItem(a, c);
        }
        else {
            this.f6.item(a, c);
        }
        this.re(function (d) {
            if (_this.b1.isDataToolTipLayer(d)) {
                _this.q0(d);
            }
        });
    };
    DomainChart.prototype.q0 = function (a) {
        for (var b = 0; b < this.f7.count; b++) {
            var c = this.f7._inner[b];
            var d = this.f6.item(c);
            if (stringStartsWith(c, "DataToolTip")) {
                c = c.substr(("DataToolTip").length);
            }
            this.b1.updateDataToolTipPropertyByName(a, c, d);
        }
    };
    DomainChart.prototype.sb = function (a, b) {
        var _this = this;
        this.rh(function (c, d) { return _this.q1(c, d); });
    };
    Object.defineProperty(DomainChart.prototype, "ay", {
        get: function () {
            return this.as;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "au", {
        get: function () {
            return this.ao;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "at", {
        get: function () {
            return this.an;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "dr", {
        get: function () {
            return this.dp;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "a2", {
        get: function () {
            return this.a0;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ax", {
        get: function () {
            return this.ar;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "aw", {
        get: function () {
            return this.aq;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "av", {
        get: function () {
            return this.ap;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "a1", {
        get: function () {
            return this.az;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ok", {
        get: function () {
            return this.kl;
        },
        set: function (a) {
            var _this = this;
            var b = this.kl;
            this.kl = a;
            if (b != a) {
                this.ar.n();
                this.ds.b(this.kl, function (c, d, e) { return _this.ar.j.add(new ChartSortDescription(2, c, d)); });
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "n1", {
        get: function () {
            return this.kj;
        },
        set: function (a) {
            var _this = this;
            var b = this.kj;
            this.kj = a;
            if (b != a) {
                this.aq.n();
                this.ds.b(this.kj, function (c, d, e) { return _this.aq.j.add(new ChartSortDescription(2, c, d)); });
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "oi", {
        get: function () {
            return this.kk;
        },
        set: function (a) {
            var _this = this;
            var b = this.kk;
            this.kk = a;
            if (b != a) {
                this.ap.n();
                this.ds.b(this.kk, function (c, d, e) { return _this.ap.j.add(new ChartSortDescription(2, c, d)); });
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "om", {
        get: function () {
            return this.km;
        },
        set: function (a) {
            var _this = this;
            var b = this.km;
            this.km = a;
            if (b != a) {
                this.az.n();
                this.dt.a(this.km, function (c, d, e) {
                    return _this.az.j.add(((function () {
                        var $ret = new ChartSummaryDescription(2, c, d);
                        $ret.n = e;
                        return $ret;
                    })()));
                });
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "itemsSource", {
        get: function () {
            return this.jq;
        },
        set: function (a) {
            var b = this.itemsSource;
            if (b != a) {
                this.jq = a;
                this.sd("ItemsSource", b, this.itemsSource);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "actualItemsSource", {
        get: function () {
            return this.jp;
        },
        set: function (a) {
            var b = this.actualItemsSource;
            if (b != a) {
                this.jp = a;
                this.sd("ActualItemsSource", b, this.actualItemsSource);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "q", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            var b = this.h;
            this.h = a;
            if (b != this.h) {
                this.sd("IncludedProperties", b, this.h);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "o", {
        get: function () {
            return this.g;
        },
        set: function (a) {
            var b = this.g;
            this.g = a;
            if (b != this.g) {
                this.sd("ExcludedProperties", b, this.g);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "aa", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            var b = this.aa;
            if (a != b) {
                this.t = a;
                this.sd("Brushes", b, this.aa);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ae", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            var b = this.ae;
            if (a != b) {
                this.w = a;
                this.sd("Outlines", b, this.ae);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "y", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            var b = this.r;
            if (a != b) {
                this.r = a;
                this.sd("ActualBrushes", b, this.y);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "z", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            var b = this.s;
            if (a != b) {
                this.s = a;
                this.sd("ActualOutlines", b, this.z);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "legend", {
        get: function () {
            return this.b2;
        },
        set: function (a) {
            var b = this.legend;
            if (a != b) {
                this.b2 = a;
                this.sd("Legend", b, this.legend);
            }
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.get_fs = function () {
        return this.eu;
    };
    DomainChart.prototype.set_fs = function (a) {
        var b = this.fs;
        if (a != b) {
            this.eu = a;
            this.sd("IsHorizontalZoomEnabled", b, this.fs);
        }
    };
    Object.defineProperty(DomainChart.prototype, "fs", {
        get: function () {
            return this.get_fs();
        },
        set: function (a) {
            this.set_fs(a);
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.get_fy = function () {
        return this.ex;
    };
    DomainChart.prototype.set_fy = function (a) {
        var b = this.fy;
        if (a != b) {
            this.ex = a;
            this.sd("IsVerticalZoomEnabled", b, this.fy);
        }
    };
    Object.defineProperty(DomainChart.prototype, "fy", {
        get: function () {
            return this.get_fy();
        },
        set: function (a) {
            this.set_fy(a);
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.get_f1 = function () {
        return this.ez;
    };
    DomainChart.prototype.set_f1 = function (a) {
        var b = this.f1;
        if (a != b) {
            this.ez = a;
            this.sd("ShouldDisplayMockData", b, this.f1);
        }
    };
    Object.defineProperty(DomainChart.prototype, "f1", {
        get: function () {
            return this.get_f1();
        },
        set: function (a) {
            this.set_f1(a);
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.get_f4 = function () {
        return this.e5;
    };
    DomainChart.prototype.set_f4 = function (a) {
        var b = this.f4;
        if (a != b) {
            this.e5 = a;
            this.sd("ShouldUseSkeletonStyleForMockData", b, this.f4);
        }
    };
    Object.defineProperty(DomainChart.prototype, "f4", {
        get: function () {
            return this.get_f4();
        },
        set: function (a) {
            this.set_f4(a);
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.get_fu = function () {
        return this.ew;
    };
    DomainChart.prototype.set_fu = function (a) {
        var b = this.fu;
        if (a != b) {
            this.ew = a;
            this.sd("IsSeriesHighlightingEnabled", b, this.fu);
        }
    };
    Object.defineProperty(DomainChart.prototype, "fu", {
        get: function () {
            return this.get_fu();
        },
        set: function (a) {
            this.set_fu(a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ur", {
        get: function () {
            return this.up;
        },
        set: function (a) {
            var b = this.ur;
            if (Rect.l_op_Inequality(a, b)) {
                this.up = a;
                this.sd("WindowRect", b, this.ur);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "uq", {
        get: function () {
            return this.dataChart != null ? this.dataChart.to : Rect.empty;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "pw", {
        get: function () {
            return this.kp;
        },
        set: function (a) {
            var b = this.pw;
            if (a != b) {
                this.kp = a;
                this.sd("Title", b, this.pw);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "pl", {
        get: function () {
            return this.kn;
        },
        set: function (a) {
            var b = this.pl;
            if (a != b) {
                this.kn = a;
                this.sd("Subtitle", b, this.pl);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "s8", {
        get: function () {
            return this.s6;
        },
        set: function (a) {
            var b = this.s8;
            if (b != a) {
                this.s6 = a;
                this.sd("TitleAlignment", enumGetBox(HorizontalAlignment_$type, b), enumGetBox(HorizontalAlignment_$type, this.s8));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "s7", {
        get: function () {
            return this.s5;
        },
        set: function (a) {
            var b = this.s7;
            if (b != a) {
                this.s5 = a;
                this.sd("SubtitleAlignment", enumGetBox(HorizontalAlignment_$type, b), enumGetBox(HorizontalAlignment_$type, this.s7));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "dl", {
        get: function () {
            return this.dk;
        },
        set: function (a) {
            var b = this.dl;
            if (a != b) {
                this.dk = a;
                this.sd("UnknownValuePlotting", enumGetBox(UnknownValuePlotting_$type, b), enumGetBox(UnknownValuePlotting_$type, this.dl));
            }
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.get_ih = function () {
        return this.g6;
    };
    DomainChart.prototype.set_ih = function (a) {
        var b = this.ih;
        if (a != b) {
            this.g6 = a;
            this.sd("Resolution", b, this.ih);
        }
    };
    Object.defineProperty(DomainChart.prototype, "ih", {
        get: function () {
            return this.get_ih();
        },
        set: function (a) {
            this.set_ih(a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "io", {
        get: function () {
            return this.hc;
        },
        set: function (a) {
            var b = this.io;
            if (a != b) {
                this.hc = a;
                this.sd("Thickness", b, this.io);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "c3", {
        get: function () {
            return this.c2;
        },
        set: function (a) {
            var b = this.c3;
            if (a != b) {
                this.c2 = a;
                this.sd("OutlineMode", enumGetBox(SeriesOutlineMode_$type, b), enumGetBox(SeriesOutlineMode_$type, this.c3));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ck", {
        get: function () {
            return this.cj;
        },
        set: function (a) {
            var b = this.ck;
            if (a != b) {
                this.cj = a;
                this.sd("MarkerOutlineMode", enumGetBox(MarkerOutlineMode_$type, b), enumGetBox(MarkerOutlineMode_$type, this.ck));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ci", {
        get: function () {
            return this.ch;
        },
        set: function (a) {
            var b = this.ci;
            if (a != b) {
                this.ch = a;
                this.sd("MarkerFillMode", enumGetBox(MarkerFillMode_$type, b), enumGetBox(MarkerFillMode_$type, this.ci));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "h9", {
        get: function () {
            return this.gz;
        },
        set: function (a) {
            var b = this.h9;
            if (a != b) {
                this.gz = a;
                this.sd("MarkerFillOpacity", b, this.h9);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ia", {
        get: function () {
            return this.g0;
        },
        set: function (a) {
            var b = this.ia;
            if (a != b) {
                this.g0 = a;
                this.sd("MarkerThickness", b, this.ia);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "cp", {
        get: function () {
            return this.co;
        },
        set: function (a) {
            var b = this.cp;
            if (a != b) {
                this.co = a;
                this.sd("MarkerTypes", b, this.cp);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "cg", {
        get: function () {
            return this.cf;
        },
        set: function (a) {
            var b = this.cg;
            if (a != b) {
                this.cf = a;
                this.sd("MarkerAutomaticBehavior", enumGetBox(MarkerAutomaticBehavior_$type, b), enumGetBox(MarkerAutomaticBehavior_$type, this.cg));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ac", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            var b = this.ac;
            if (a != b) {
                this.u = a;
                this.sd("MarkerBrushes", b, this.ac);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ad", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            var b = this.ad;
            if (!Base.equalsStatic(a, b)) {
                this.v = a;
                this.sd("MarkerOutlines", b, this.ad);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "jm", {
        get: function () {
            return this.jd;
        },
        set: function (a) {
            var b = this.jd;
            if (a != b) {
                this.jd = a;
                this.sd("MarkerMaxCount", b, this.jd);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "hu", {
        get: function () {
            return this.gk;
        },
        set: function (a) {
            var b = this.hu;
            if (a != b) {
                this.gk = a;
                this.sd("AreaFillOpacity", b, this.hu);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "e8", {
        get: function () {
            return this.eh;
        },
        set: function (a) {
            var b = this.eh;
            if (a != b) {
                this.eh = a;
                this.sd("AnimateSeriesWhenAxisRangeChanges", b, this.eh);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ag", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            var b = this.ag;
            if (a != b) {
                this.x = a;
                this.sd("TrendLineBrushes", b, this.ag);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "dj", {
        get: function () {
            return this.di;
        },
        set: function (a) {
            var b = this.dj;
            if (a != b) {
                this.di = a;
                this.sd("TrendLineType", enumGetBox(TrendLineType_$type, b), enumGetBox(TrendLineType_$type, this.dj));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "iu", {
        get: function () {
            return this.hi;
        },
        set: function (a) {
            var b = this.iu;
            if (a != b) {
                this.hi = a;
                this.sd("TrendLineThickness", b, this.iu);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "e7", {
        get: function () {
            return this.eg;
        },
        set: function (a) {
            var b = this.e7;
            if (a != b) {
                this.eg = a;
                this.sd("AlignsGridLinesToPixels", b, this.e7);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "id", {
        get: function () {
            return this.g3;
        },
        set: function (a) {
            var b = this.g3;
            this.g3 = a;
            if (a != b) {
                this.sd("PlotAreaMarginLeft", b, a);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ig", {
        get: function () {
            return this.g5;
        },
        set: function (a) {
            var b = this.g5;
            this.g5 = a;
            if (a != b) {
                this.sd("PlotAreaMarginTop", b, a);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ie", {
        get: function () {
            return this.g4;
        },
        set: function (a) {
            var b = this.g4;
            this.g4 = a;
            if (a != b) {
                this.sd("PlotAreaMarginRight", b, a);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ic", {
        get: function () {
            return this.g2;
        },
        set: function (a) {
            var b = this.g2;
            this.g2 = a;
            if (a != b) {
                this.sd("PlotAreaMarginBottom", b, a);
            }
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.sc = function () {
    };
    Object.defineProperty(DomainChart.prototype, "a4", {
        get: function () {
            return this.a3;
        },
        set: function (a) {
            var b = this.a4;
            if (a != b) {
                this.a3 = a;
                this.sd("ComputedPlotAreaMarginMode", enumGetBox(ComputedPlotAreaMarginMode_$type, b), enumGetBox(ComputedPlotAreaMarginMode_$type, this.a4));
            }
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.a5 = function () {
        return this.a4;
    };
    Object.defineProperty(DomainChart.prototype, "c5", {
        get: function () {
            return this.c4;
        },
        set: function (a) {
            var b = this.c5;
            if (a != b) {
                this.c4 = a;
                this.sd("SeriesPlotAreaMarginHorizontalMode", enumGetBox(SeriesPlotAreaMarginHorizontalMode_$type, b), enumGetBox(SeriesPlotAreaMarginHorizontalMode_$type, this.c5));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "c7", {
        get: function () {
            return this.c6;
        },
        set: function (a) {
            var b = this.c7;
            if (a != b) {
                this.c6 = a;
                this.sd("SeriesPlotAreaMarginVerticalMode", enumGetBox(SeriesPlotAreaMarginVerticalMode_$type, b), enumGetBox(SeriesPlotAreaMarginVerticalMode_$type, this.c7));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "c1", {
        get: function () {
            return this.c0;
        },
        set: function (a) {
            var b = this.c1;
            if (a != b) {
                this.c0 = a;
                this.sd("HighlightingMode", enumGetBox(SeriesHighlightingMode_$type, b), enumGetBox(SeriesHighlightingMode_$type, this.c1));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "cz", {
        get: function () {
            return this.cy;
        },
        set: function (a) {
            var b = this.cz;
            if (a != b) {
                this.cy = a;
                this.sd("HighlightingBehavior", enumGetBox(SeriesHighlightingBehavior_$type, b), enumGetBox(SeriesHighlightingBehavior_$type, this.cz));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "b8", {
        get: function () {
            return this.b7;
        },
        set: function (a) {
            var b = this.b8;
            if (a != b) {
                this.b7 = a;
                this.sd("LegendHighlightingMode", enumGetBox(LegendHighlightingMode_$type, b), enumGetBox(LegendHighlightingMode_$type, this.b8));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ce", {
        get: function () {
            return this.cc;
        },
        set: function (a) {
            var b = this.ce;
            if (a != b) {
                this.cc = a;
                this.sd("LegendItemBadgeShape", enumGetBox(LegendItemBadgeShape_$type, b), enumGetBox(LegendItemBadgeShape_$type, this.ce));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ca", {
        get: function () {
            return this.b9;
        },
        set: function (a) {
            var b = this.ca;
            if (a != b) {
                this.b9 = a;
                this.sd("LegendItemBadgeMode", enumGetBox(LegendItemBadgeMode_$type, b), enumGetBox(LegendItemBadgeMode_$type, this.ca));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "jo", {
        get: function () {
            return this.jg;
        },
        set: function (a) {
            var b = this.jo;
            if (a != b) {
                this.jg = a;
                this.sd("TrendLinePeriod", b, this.jo);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "dh", {
        get: function () {
            return this.dg;
        },
        set: function (a) {
            var b = this.dh;
            if (a != b) {
                this.dg = a;
                this.sd("ToolTipType", enumGetBox(ToolTipType_$type, b), enumGetBox(ToolTipType_$type, this.dh));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "a7", {
        get: function () {
            return this.a6;
        },
        set: function (a) {
            var b = this.a7;
            if (a != b) {
                this.a6 = a;
                this.sd("CrosshairsDisplayMode", enumGetBox(CrosshairsDisplayMode_$type, b), enumGetBox(CrosshairsDisplayMode_$type, this.a7));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "fd", {
        get: function () {
            return this.em;
        },
        set: function (a) {
            var b = this.fd;
            if (a != b) {
                this.em = a;
                this.sd("CrosshairsSnapToData", b, this.fd);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "t1", {
        get: function () {
            return this.te;
        },
        set: function (a) {
            var b = this.t1;
            if (a != b) {
                this.te = a;
                this.sd("CrosshairsLineVerticalStroke", b, this.t1);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "hw", {
        get: function () {
            return this.gm;
        },
        set: function (a) {
            var b = this.hw;
            if (a != b) {
                this.gm = a;
                this.sd("CrosshairsLineThickness", b, this.hw);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "t0", {
        get: function () {
            return this.td;
        },
        set: function (a) {
            var b = this.t0;
            if (a != b) {
                this.td = a;
                this.sd("CrosshairsLineHorizontalStroke", b, this.t0);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "fc", {
        get: function () {
            return this.el;
        },
        set: function (a) {
            var b = this.fc;
            if (a != b) {
                this.el = a;
                this.sd("CrosshairsAnnotationEnabled", b, this.fc);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "tw", {
        get: function () {
            return this.s9;
        },
        set: function (a) {
            var b = this.tw;
            if (a != b) {
                this.s9 = a;
                this.sd("CrosshairsAnnotationXAxisBackground", b, this.tw);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ty", {
        get: function () {
            return this.tb;
        },
        set: function (a) {
            var b = this.ty;
            if (a != b) {
                this.tb = a;
                this.sd("CrosshairsAnnotationYAxisBackground", b, this.ty);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "tx", {
        get: function () {
            return this.ta;
        },
        set: function (a) {
            var b = this.tx;
            if (a != b) {
                this.ta = a;
                this.sd("CrosshairsAnnotationXAxisTextColor", b, this.tx);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "tz", {
        get: function () {
            return this.tc;
        },
        set: function (a) {
            var b = this.tz;
            if (a != b) {
                this.tc = a;
                this.sd("CrosshairsAnnotationYAxisTextColor", b, this.tz);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "jh", {
        get: function () {
            return this.i8;
        },
        set: function (a) {
            var b = this.jh;
            if (a != b) {
                this.i8 = a;
                this.sd("CrosshairsAnnotationXAxisPrecision", b, this.jh);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ji", {
        get: function () {
            return this.i9;
        },
        set: function (a) {
            var b = this.ji;
            if (a != b) {
                this.i9 = a;
                this.sd("CrosshairsAnnotationYAxisPrecision", b, this.ji);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "f0", {
        get: function () {
            return this.ey;
        },
        set: function (a) {
            var b = this.f0;
            if (a != b) {
                this.ey = a;
                this.sd("ShouldAvoidAxisAnnotationCollisions", b, this.f0);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "f2", {
        get: function () {
            return this.e0;
        },
        set: function (a) {
            var b = this.e0;
            if (a != b) {
                this.e0 = a;
                this.sd("ShouldPanOnMaximumZoom", b, this.e0);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "fj", {
        get: function () {
            return this.es;
        },
        set: function (a) {
            var b = this.fj;
            if (a != b) {
                this.es = a;
                this.sd("FinalValueAnnotationsVisible", b, this.fj);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ub", {
        get: function () {
            return this.to;
        },
        set: function (a) {
            var b = this.ub;
            if (a != b) {
                this.to = a;
                this.sd("FinalValueAnnotationsBackground", b, this.ub);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "uc", {
        get: function () {
            return this.tp;
        },
        set: function (a) {
            var b = this.uc;
            if (a != b) {
                this.tp = a;
                this.sd("FinalValueAnnotationsTextColor", b, this.uc);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "jl", {
        get: function () {
            return this.jc;
        },
        set: function (a) {
            var b = this.jl;
            if (a != b) {
                this.jc = a;
                this.sd("FinalValueAnnotationsPrecision", b, this.jl);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "fb", {
        get: function () {
            return this.ek;
        },
        set: function (a) {
            var b = this.fb;
            if (a != b) {
                this.ek = a;
                this.sd("CalloutsVisible", b, this.fb);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "fa", {
        get: function () {
            return this.ej;
        },
        set: function (a) {
            var b = this.fa;
            if (a != b) {
                this.ej = a;
                this.sd("CalloutStyleUpdatingEventEnabled", b, this.fa);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "calloutsItemsSource", {
        get: function () {
            return this.gh;
        },
        set: function (a) {
            var b = this.calloutsItemsSource;
            if (a != b) {
                this.gh = a;
                this.sd("CalloutsItemsSource", b, this.calloutsItemsSource);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ai", {
        get: function () {
            return this.ah;
        },
        set: function (a) {
            var b = this.ai;
            if (a != b) {
                this.ah = a;
                this.sd("CalloutsAllowedPositions", b, this.ai);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "k7", {
        get: function () {
            return this.j7;
        },
        set: function (a) {
            var b = this.k7;
            if (a != b) {
                this.j7 = a;
                this.sd("CalloutsXMemberPath", b, this.k7);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "k9", {
        get: function () {
            return this.j8;
        },
        set: function (a) {
            var b = this.k9;
            if (a != b) {
                this.j8 = a;
                this.sd("CalloutsYMemberPath", b, this.k9);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "k3", {
        get: function () {
            return this.j6;
        },
        set: function (a) {
            var b = this.k3;
            if (a != b) {
                this.j6 = a;
                this.sd("CalloutsLabelMemberPath", b, this.k3);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "k0", {
        get: function () {
            return this.j5;
        },
        set: function (a) {
            var b = this.k0;
            if (a != b) {
                this.j5 = a;
                this.sd("CalloutsContentMemberPath", b, this.k0);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "dc", {
        get: function () {
            return this.da;
        },
        set: function (a) {
            var b = this.da;
            this.da = a;
            if (b != this.da) {
                this.sd("HorizontalViewScrollbarMode", enumGetBox(SeriesViewerScrollbarMode_$type, b), enumGetBox(SeriesViewerScrollbarMode_$type, this.da));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "dd", {
        get: function () {
            return this.db;
        },
        set: function (a) {
            var b = this.db;
            this.db = a;
            if (b != this.db) {
                this.sd("VerticalViewScrollbarMode", enumGetBox(SeriesViewerScrollbarMode_$type, b), enumGetBox(SeriesViewerScrollbarMode_$type, this.db));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "c9", {
        get: function () {
            return this.c8;
        },
        set: function (a) {
            var b = this.c8;
            this.c8 = a;
            if (b != this.c8) {
                this.sd("HorizontalViewScrollbarPosition", enumGetBox(SeriesViewerHorizontalScrollbarPosition_$type, b), enumGetBox(SeriesViewerHorizontalScrollbarPosition_$type, this.c8));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "df", {
        get: function () {
            return this.de;
        },
        set: function (a) {
            var b = this.de;
            this.de = a;
            if (b != this.de) {
                this.sd("VerticalViewScrollbarPosition", enumGetBox(SeriesViewerVerticalScrollbarPosition_$type, b), enumGetBox(SeriesViewerVerticalScrollbarPosition_$type, this.de));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "uh", {
        get: function () {
            return this.tq;
        },
        set: function (a) {
            var b = this.tq;
            this.tq = a;
            if (b != this.tq) {
                this.sd("HorizontalViewScrollbarFill", b, this.tq);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ui", {
        get: function () {
            return this.tr;
        },
        set: function (a) {
            var b = this.tr;
            this.tr = a;
            if (b != this.tr) {
                this.sd("HorizontalViewScrollbarOutline", b, this.tr);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "h5", {
        get: function () {
            return this.gv;
        },
        set: function (a) {
            var b = this.gv;
            this.gv = a;
            if (b != this.gv) {
                this.sd("HorizontalViewScrollbarStrokeThickness", b, this.gv);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "h4", {
        get: function () {
            return this.gu;
        },
        set: function (a) {
            var b = this.gu;
            this.gu = a;
            if (b != this.gu) {
                this.sd("HorizontalViewScrollbarMaxOpacity", b, this.gu);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "h1", {
        get: function () {
            return this.gr;
        },
        set: function (a) {
            var b = this.gr;
            this.gr = a;
            if (b != this.gr) {
                this.sd("HorizontalViewScrollbarCornerRadius", b, this.gr);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "h2", {
        get: function () {
            return this.gs;
        },
        set: function (a) {
            var b = this.gs;
            this.gs = a;
            if (b != this.gs) {
                this.sd("HorizontalViewScrollbarHeight", b, this.gs);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "h3", {
        get: function () {
            return this.gt;
        },
        set: function (a) {
            var b = this.gt;
            this.gt = a;
            if (b != this.gt) {
                this.sd("HorizontalViewScrollbarInset", b, this.gt);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "h7", {
        get: function () {
            return this.gx;
        },
        set: function (a) {
            var b = this.gx;
            this.gx = a;
            if (b != this.gx) {
                this.sd("HorizontalViewScrollbarTrackStartInset", b, this.gx);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "h6", {
        get: function () {
            return this.gw;
        },
        set: function (a) {
            var b = this.gw;
            this.gw = a;
            if (b != this.gw) {
                this.sd("HorizontalViewScrollbarTrackEndInset", b, this.gw);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "fl", {
        get: function () {
            return this.et;
        },
        set: function (a) {
            var b = this.et;
            this.et = a;
            if (b != this.et) {
                this.sd(DomainChart.od, b, this.et);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "um", {
        get: function () {
            return this.tu;
        },
        set: function (a) {
            var b = this.tu;
            this.tu = a;
            if (b != this.tu) {
                this.sd("VerticalViewScrollbarFill", b, this.tu);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "un", {
        get: function () {
            return this.tv;
        },
        set: function (a) {
            var b = this.tv;
            this.tv = a;
            if (b != this.tv) {
                this.sd("VerticalViewScrollbarOutline", b, this.tv);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "iy", {
        get: function () {
            return this.hm;
        },
        set: function (a) {
            var b = this.hm;
            this.hm = a;
            if (b != this.hm) {
                this.sd("VerticalViewScrollbarStrokeThickness", b, this.hm);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ix", {
        get: function () {
            return this.hl;
        },
        set: function (a) {
            var b = this.hl;
            this.hl = a;
            if (b != this.hl) {
                this.sd("VerticalViewScrollbarMaxOpacity", b, this.hl);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "iv", {
        get: function () {
            return this.hj;
        },
        set: function (a) {
            var b = this.hj;
            this.hj = a;
            if (b != this.hj) {
                this.sd("VerticalViewScrollbarCornerRadius", b, this.hj);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "i1", {
        get: function () {
            return this.hp;
        },
        set: function (a) {
            var b = this.hp;
            this.hp = a;
            if (b != this.hp) {
                this.sd("VerticalViewScrollbarWidth", b, this.hp);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "iw", {
        get: function () {
            return this.hk;
        },
        set: function (a) {
            var b = this.hk;
            this.hk = a;
            if (b != this.hk) {
                this.sd("VerticalViewScrollbarInset", b, this.hk);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "i0", {
        get: function () {
            return this.ho;
        },
        set: function (a) {
            var b = this.ho;
            this.ho = a;
            if (b != this.ho) {
                this.sd("VerticalViewScrollbarTrackStartInset", b, this.ho);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "iz", {
        get: function () {
            return this.hn;
        },
        set: function (a) {
            var b = this.hn;
            this.hn = a;
            if (b != this.hn) {
                this.sd("VerticalViewScrollbarTrackEndInset", b, this.hn);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "f5", {
        get: function () {
            return this.e6;
        },
        set: function (a) {
            var b = this.e6;
            this.e6 = a;
            if (b != this.e6) {
                this.sd(DomainChart.qp, b, this.e6);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "i3", {
        get: function () {
            return this.hr;
        },
        set: function (a) {
            var b = this.hr;
            this.hr = a;
            if (b != this.hr) {
                this.sd("WindowRectMinWidth", b, this.hr);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "i2", {
        get: function () {
            return this.hq;
        },
        set: function (a) {
            var b = this.hq;
            this.hq = a;
            if (b != this.hq) {
                this.sd("WindowRectMinHeight", b, this.hq);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "i5", {
        get: function () {
            return this.ht;
        },
        set: function (a) {
            var b = this.ht;
            this.ht = a;
            if (b != this.ht) {
                this.sd("WindowSizeMinWidth", b, this.ht);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "i4", {
        get: function () {
            return this.hs;
        },
        set: function (a) {
            var b = this.hs;
            this.hs = a;
            if (b != this.hs) {
                this.sd("WindowSizeMinHeight", b, this.hs);
            }
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.$t = markType(DomainChart, 'DomainChart', Base.$, [INotifyPropertyChanged_$type, IDataLegendTarget_$type]);
    DomainChart.j4 = new Random(0);
    DomainChart.j3 = new Random(0);
    DomainChart.mk = "DataToolTipShouldUpdateWhenSeriesDataChanges";
    DomainChart.od = "HorizontalViewScrollbarShouldAddAutoTrackInsets";
    DomainChart.qp = "VerticalViewScrollbarShouldAddAutoTrackInsets";
    return DomainChart;
}(Base));
export { DomainChart };
