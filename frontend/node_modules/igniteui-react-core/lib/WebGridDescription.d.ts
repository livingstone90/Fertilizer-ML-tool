import { WebGridBaseDirectiveDescription } from "./WebGridBaseDirectiveDescription";
import { WebGroupByRecordDescription } from "./WebGroupByRecordDescription";
import { Type } from "./type";
import { WebGroupingExpressionDescription } from "./WebGroupingExpressionDescription";
import { WebGroupByExpandStateDescription } from "./WebGroupByExpandStateDescription";
import { WebGridGroupingStrategyDescription } from "./WebGridGroupingStrategyDescription";
/**
 * @hidden
 */
export declare class WebGridDescription extends WebGridBaseDirectiveDescription {
    static $t: Type;
    protected get_type(): string;
    constructor();
    private hd;
    get groupsExpanded(): boolean;
    set groupsExpanded(a: boolean);
    private hr;
    get dropAreaTemplateRef(): string;
    set dropAreaTemplateRef(a: string);
    private hp;
    get detailTemplateRef(): string;
    set detailTemplateRef(a: string);
    private hv;
    get id(): string;
    set id(a: string);
    private g7;
    get groupsRecords(): WebGroupByRecordDescription[];
    set groupsRecords(a: WebGroupByRecordDescription[]);
    private ho;
    get dataRef(): string;
    set dataRef(a: string);
    private hl;
    get filteredData(): any;
    set filteredData(a: any);
    private hj;
    get totalItemCount(): number;
    set totalItemCount(a: number);
    private g6;
    get groupingExpressions(): WebGroupingExpressionDescription[];
    set groupingExpressions(a: WebGroupingExpressionDescription[]);
    private g5;
    get groupingExpansionState(): WebGroupByExpandStateDescription[];
    set groupingExpansionState(a: WebGroupByExpandStateDescription[]);
    private he;
    get hideGroupedColumns(): boolean;
    set hideGroupedColumns(a: boolean);
    private hb;
    get groupStrategy(): WebGridGroupingStrategyDescription;
    set groupStrategy(a: WebGridGroupingStrategyDescription);
    private hq;
    get dropAreaMessage(): string;
    set dropAreaMessage(a: string);
    private ht;
    get groupByRowSelectorTemplateRef(): string;
    set groupByRowSelectorTemplateRef(a: string);
    private hu;
    get groupRowTemplateRef(): string;
    set groupRowTemplateRef(a: string);
    private hs;
    get groupAreaTemplateRef(): string;
    set groupAreaTemplateRef(a: string);
    private hf;
    get showGroupArea(): boolean;
    set showGroupArea(a: boolean);
    private hn;
    get dataPreLoadRef(): string;
    set dataPreLoadRef(a: string);
    private hw;
    get onGroupingDoneRef(): string;
    set onGroupingDoneRef(a: string);
}
