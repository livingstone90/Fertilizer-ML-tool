/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebPivotAggregatorDescriptionMetadata } from "./WebPivotAggregatorDescriptionMetadata";
import { WebPivotValueDescription } from "./WebPivotValueDescription";
/**
 * @hidden
 */
export let WebPivotValueDescriptionMetadata = /*@__PURE__*/ (() => {
    class WebPivotValueDescriptionMetadata extends Base {
        static b(a) {
            if (WebPivotValueDescriptionMetadata.a == null) {
                WebPivotValueDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                WebPivotValueDescriptionMetadata.c(WebPivotValueDescriptionMetadata.a);
            }
            if (a.j(WebPivotValueDescriptionMetadata.a)) {
                return;
            }
            a.y(WebPivotValueDescriptionMetadata.a);
            WebPivotAggregatorDescriptionMetadata.d(a);
        }
        static c(a) {
            a.item("__qualifiedNameTS", "String:PivotValue");
            a.item("__packageNameWC", "String:grids");
            a.item("__isPlainObject", "Boolean");
            a.item("Member", "String");
            a.item("DisplayName", "String");
            a.item("Aggregate", "ExportedType:WebPivotAggregator");
            a.item("AggregateList", "Collection:WebPivotAggregator:PivotAggregatorCollection:WebPivotAggregator");
            a.item("Enabled", "Boolean");
            a.item("Styles", "Unknown");
            a.item("DataType", "ExportedType:string:GridColumnDataType");
            a.item("DataType@names", "String;Number;Boolean;Date;DateTime;Time;Currency;Percent;Image");
            a.item("FormatterRef", "EventRef::formatter");
        }
        static d(a) {
            WebPivotValueDescriptionMetadata.b(a);
            a.aa("WebPivotValue", () => new WebPivotValueDescription());
            a.z("WebPivotValue", WebPivotValueDescriptionMetadata.a);
        }
    }
    WebPivotValueDescriptionMetadata.$t = /*@__PURE__*/ markType(WebPivotValueDescriptionMetadata, 'WebPivotValueDescriptionMetadata');
    WebPivotValueDescriptionMetadata.a = null;
    return WebPivotValueDescriptionMetadata;
})();
