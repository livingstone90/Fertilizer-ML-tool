/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebPivotAggregatorDescription } from "./WebPivotAggregatorDescription";
/**
 * @hidden
 */
export let WebPivotAggregatorDescriptionMetadata = /*@__PURE__*/ (() => {
    class WebPivotAggregatorDescriptionMetadata extends Base {
        static b(a) {
            if (WebPivotAggregatorDescriptionMetadata.a == null) {
                WebPivotAggregatorDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                WebPivotAggregatorDescriptionMetadata.c(WebPivotAggregatorDescriptionMetadata.a);
            }
            if (a.j(WebPivotAggregatorDescriptionMetadata.a)) {
                return;
            }
            a.y(WebPivotAggregatorDescriptionMetadata.a);
        }
        static c(a) {
            a.item("__qualifiedNameTS", "String:PivotAggregator");
            a.item("__packageNameWC", "String:grids");
            a.item("__isPlainObject", "Boolean");
            a.item("Key", "String");
            a.item("Label", "String");
            a.item("AggregatorName", "ExportedType:string:PivotAggregationType");
            a.item("AggregatorName@names", "SUM;AVG;MIN;MAX;COUNT;LATEST;EARLIEST");
            a.item("AggregatorRef", "EventRef::aggregator");
        }
        static d(a) {
            WebPivotAggregatorDescriptionMetadata.b(a);
            a.aa("WebPivotAggregator", () => new WebPivotAggregatorDescription());
            a.z("WebPivotAggregator", WebPivotAggregatorDescriptionMetadata.a);
        }
    }
    WebPivotAggregatorDescriptionMetadata.$t = /*@__PURE__*/ markType(WebPivotAggregatorDescriptionMetadata, 'WebPivotAggregatorDescriptionMetadata');
    WebPivotAggregatorDescriptionMetadata.a = null;
    return WebPivotAggregatorDescriptionMetadata;
})();
