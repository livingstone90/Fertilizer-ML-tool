/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { CategoryAxisBaseDescription } from "./CategoryAxisBaseDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let CategoryYAxisDescription = /*@__PURE__*/ (() => {
    class CategoryYAxisDescription extends CategoryAxisBaseDescription {
        constructor() {
            super();
            this.dv = 0;
            this.dt = 0;
            this.dw = 0;
            this.du = 0;
            this.dx = 0;
            this.dy = 0;
            this.dz = 0;
            this.d0 = 0;
            this.d1 = 0;
            this.eb = null;
            this.ec = null;
        }
        get_type() {
            return "CategoryYAxis";
        }
        get interval() {
            return this.dv;
        }
        set interval(a) {
            this.dv = a;
            this.e("Interval");
        }
        get actualInterval() {
            return this.dt;
        }
        set actualInterval(a) {
            this.dt = a;
            this.e("ActualInterval");
        }
        get minorInterval() {
            return this.dw;
        }
        set minorInterval(a) {
            this.dw = a;
            this.e("MinorInterval");
        }
        get actualMinorInterval() {
            return this.du;
        }
        set actualMinorInterval(a) {
            this.du = a;
            this.e("ActualMinorInterval");
        }
        get zoomMaximumCategoryRange() {
            return this.dx;
        }
        set zoomMaximumCategoryRange(a) {
            this.dx = a;
            this.e("ZoomMaximumCategoryRange");
        }
        get zoomMaximumItemSpan() {
            return this.dy;
        }
        set zoomMaximumItemSpan(a) {
            this.dy = a;
            this.e("ZoomMaximumItemSpan");
        }
        get zoomToCategoryRange() {
            return this.dz;
        }
        set zoomToCategoryRange(a) {
            this.dz = a;
            this.e("ZoomToCategoryRange");
        }
        get zoomToCategoryStart() {
            return this.d0;
        }
        set zoomToCategoryStart(a) {
            this.d0 = a;
            this.e("ZoomToCategoryStart");
        }
        get zoomToItemSpan() {
            return this.d1;
        }
        set zoomToItemSpan(a) {
            this.d1 = a;
            this.e("ZoomToItemSpan");
        }
        get actualIntervalChangeRef() {
            return this.eb;
        }
        set actualIntervalChangeRef(a) {
            this.eb = a;
            this.e("ActualIntervalChangeRef");
        }
        get actualMinorIntervalChangeRef() {
            return this.ec;
        }
        set actualMinorIntervalChangeRef(a) {
            this.ec = a;
            this.e("ActualMinorIntervalChangeRef");
        }
    }
    CategoryYAxisDescription.$t = /*@__PURE__*/ markType(CategoryYAxisDescription, 'CategoryYAxisDescription', CategoryAxisBaseDescription.$);
    return CategoryYAxisDescription;
})();
