/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let WebCellTypeDescription = /*@__PURE__*/ (() => {
    class WebCellTypeDescription extends Description {
        constructor() {
            super();
            this.ad = null;
            this.ab = null;
            this.s = false;
            this.o = false;
            this.p = false;
            this.q = false;
            this.f = null;
            this.h = null;
            this.j = null;
            this.aa = null;
            this.l = null;
            this.r = false;
            this.ac = null;
            this.aj = null;
            this.y = 0;
        }
        get_type() {
            return "WebCellType";
        }
        get type() {
            return this.get_type();
        }
        get value() {
            return this.ad;
        }
        set value(a) {
            this.ad = a;
            this.e("Value");
        }
        get editValue() {
            return this.ab;
        }
        set editValue(a) {
            this.ab = a;
            this.e("EditValue");
        }
        get selected() {
            return this.s;
        }
        set selected(a) {
            this.s = a;
            this.e("Selected");
        }
        get active() {
            return this.o;
        }
        set active(a) {
            this.o = a;
            this.e("Active");
        }
        get editable() {
            return this.p;
        }
        set editable(a) {
            this.p = a;
            this.e("Editable");
        }
        get editMode() {
            return this.q;
        }
        set editMode(a) {
            this.q = a;
            this.e("EditMode");
        }
        get column() {
            return this.f;
        }
        set column(a) {
            this.f = a;
            this.e("Column");
        }
        get grid() {
            return this.h;
        }
        set grid(a) {
            this.h = a;
            this.e("Grid");
        }
        get id() {
            return this.j;
        }
        set id(a) {
            this.j = a;
            this.e("Id");
        }
        get cellID() {
            return this.aa;
        }
        set cellID(a) {
            this.aa = a;
            this.e("CellID");
        }
        get validation() {
            return this.l;
        }
        set validation(a) {
            this.l = a;
            this.e("Validation");
        }
        get readonly() {
            return this.r;
        }
        set readonly(a) {
            this.r = a;
            this.e("Readonly");
        }
        get title() {
            return this.ac;
        }
        set title(a) {
            this.ac = a;
            this.e("Title");
        }
        get width() {
            return this.aj;
        }
        set width(a) {
            this.aj = a;
            this.e("Width");
        }
        get visibleColumnIndex() {
            return this.y;
        }
        set visibleColumnIndex(a) {
            this.y = a;
            this.e("VisibleColumnIndex");
        }
    }
    WebCellTypeDescription.$t = /*@__PURE__*/ markType(WebCellTypeDescription, 'WebCellTypeDescription', Description.$);
    WebCellTypeDescription.__marshalByValue = true;
    WebCellTypeDescription.__marshalByValueAlias = "CellType";
    return WebCellTypeDescription;
})();
