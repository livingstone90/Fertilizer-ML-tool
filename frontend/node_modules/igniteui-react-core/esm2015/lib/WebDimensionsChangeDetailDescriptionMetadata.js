/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebPivotDimensionDescriptionMetadata } from "./WebPivotDimensionDescriptionMetadata";
import { WebDimensionsChangeDetailDescription } from "./WebDimensionsChangeDetailDescription";
/**
 * @hidden
 */
export let WebDimensionsChangeDetailDescriptionMetadata = /*@__PURE__*/ (() => {
    class WebDimensionsChangeDetailDescriptionMetadata extends Base {
        static b(a) {
            if (WebDimensionsChangeDetailDescriptionMetadata.a == null) {
                WebDimensionsChangeDetailDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                WebDimensionsChangeDetailDescriptionMetadata.c(WebDimensionsChangeDetailDescriptionMetadata.a);
            }
            if (a.j(WebDimensionsChangeDetailDescriptionMetadata.a)) {
                return;
            }
            a.y(WebDimensionsChangeDetailDescriptionMetadata.a);
            WebPivotDimensionDescriptionMetadata.d(a);
        }
        static c(a) {
            a.item("__qualifiedNameTS", "String:DimensionsChangeDetail");
            a.item("__packageNameWC", "String:grids");
            a.item("__isPlainObject", "Boolean");
            a.item("Dimensions", "Array:WebPivotDimensionDescription:PivotDimension");
            a.item("DimensionCollectionType", "ExportedType:string:PivotDimensionType");
            a.item("DimensionCollectionType@names", "Row;Column;Filter");
        }
        static d(a) {
            WebDimensionsChangeDetailDescriptionMetadata.b(a);
            a.aa("WebDimensionsChangeDetail", () => new WebDimensionsChangeDetailDescription());
            a.z("WebDimensionsChangeDetail", WebDimensionsChangeDetailDescriptionMetadata.a);
        }
    }
    WebDimensionsChangeDetailDescriptionMetadata.$t = /*@__PURE__*/ markType(WebDimensionsChangeDetailDescriptionMetadata, 'WebDimensionsChangeDetailDescriptionMetadata');
    WebDimensionsChangeDetailDescriptionMetadata.a = null;
    return WebDimensionsChangeDetailDescriptionMetadata;
})();
