/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebColumnMovingServiceDescription } from "./WebColumnMovingServiceDescription";
/**
 * @hidden
 */
export let WebColumnMovingServiceDescriptionMetadata = /*@__PURE__*/ (() => {
    class WebColumnMovingServiceDescriptionMetadata extends Base {
        static b(a) {
            if (WebColumnMovingServiceDescriptionMetadata.a == null) {
                WebColumnMovingServiceDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                WebColumnMovingServiceDescriptionMetadata.c(WebColumnMovingServiceDescriptionMetadata.a);
            }
            if (a.j(WebColumnMovingServiceDescriptionMetadata.a)) {
                return;
            }
            a.y(WebColumnMovingServiceDescriptionMetadata.a);
        }
        static c(a) {
            a.item("__qualifiedNameTS", "String:ColumnMovingService");
            a.item("__packageNameWC", "String:grids");
        }
        static d(a) {
            WebColumnMovingServiceDescriptionMetadata.b(a);
            a.aa("WebColumnMovingService", () => new WebColumnMovingServiceDescription());
            a.z("WebColumnMovingService", WebColumnMovingServiceDescriptionMetadata.a);
        }
    }
    WebColumnMovingServiceDescriptionMetadata.$t = /*@__PURE__*/ markType(WebColumnMovingServiceDescriptionMetadata, 'WebColumnMovingServiceDescriptionMetadata');
    WebColumnMovingServiceDescriptionMetadata.a = null;
    return WebColumnMovingServiceDescriptionMetadata;
})();
