/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebFilteringExpressionsTreeDescriptionMetadata } from "./WebFilteringExpressionsTreeDescriptionMetadata";
import { WebPivotDimensionDescription } from "./WebPivotDimensionDescription";
/**
 * @hidden
 */
export let WebPivotDimensionDescriptionMetadata = /*@__PURE__*/ (() => {
    class WebPivotDimensionDescriptionMetadata extends Base {
        static b(a) {
            if (WebPivotDimensionDescriptionMetadata.a == null) {
                WebPivotDimensionDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                WebPivotDimensionDescriptionMetadata.c(WebPivotDimensionDescriptionMetadata.a);
            }
            if (a.j(WebPivotDimensionDescriptionMetadata.a)) {
                return;
            }
            a.y(WebPivotDimensionDescriptionMetadata.a);
            WebPivotDimensionDescriptionMetadata.d(a);
            WebFilteringExpressionsTreeDescriptionMetadata.d(a);
        }
        static c(a) {
            a.item("__qualifiedNameTS", "String:PivotDimension");
            a.item("__packageNameWC", "String:grids");
            a.item("__isPlainObject", "Boolean");
            a.item("ChildLevel", "ExportedType:WebPivotDimension");
            a.item("MemberName", "String");
            a.item("Enabled", "Boolean");
            a.item("Filter", "ExportedType:WebFilteringExpressionsTree");
            a.item("SortDirection", "ExportedType:string:SortingDirection");
            a.item("SortDirection@names", "None;Asc;Desc");
            a.item("DataType", "ExportedType:string:GridColumnDataType");
            a.item("DataType@names", "String;Number;Boolean;Date;DateTime;Time;Currency;Percent;Image");
            a.item("Width", "String");
            a.item("Level", "Number:double");
            a.item("MemberFunctionRef", "EventRef::memberFunction");
        }
        static d(a) {
            WebPivotDimensionDescriptionMetadata.b(a);
            a.aa("WebPivotDimension", () => new WebPivotDimensionDescription());
            a.z("WebPivotDimension", WebPivotDimensionDescriptionMetadata.a);
        }
    }
    WebPivotDimensionDescriptionMetadata.$t = /*@__PURE__*/ markType(WebPivotDimensionDescriptionMetadata, 'WebPivotDimensionDescriptionMetadata');
    WebPivotDimensionDescriptionMetadata.a = null;
    return WebPivotDimensionDescriptionMetadata;
})();
