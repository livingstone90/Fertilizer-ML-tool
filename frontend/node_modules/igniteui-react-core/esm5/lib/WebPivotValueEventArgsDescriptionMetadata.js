/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebPivotValueDetailDescriptionMetadata } from "./WebPivotValueDetailDescriptionMetadata";
import { WebPivotValueEventArgsDescription } from "./WebPivotValueEventArgsDescription";
/**
 * @hidden
 */
var WebPivotValueEventArgsDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebPivotValueEventArgsDescriptionMetadata, _super);
    function WebPivotValueEventArgsDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebPivotValueEventArgsDescriptionMetadata.b = function (a) {
        if (WebPivotValueEventArgsDescriptionMetadata.a == null) {
            WebPivotValueEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebPivotValueEventArgsDescriptionMetadata.c(WebPivotValueEventArgsDescriptionMetadata.a);
        }
        if (a.j(WebPivotValueEventArgsDescriptionMetadata.a)) {
            return;
        }
        a.y(WebPivotValueEventArgsDescriptionMetadata.a);
        WebPivotValueDetailDescriptionMetadata.d(a);
    };
    WebPivotValueEventArgsDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:PivotValueEventArgs");
        a.item("Detail", "ExportedType:WebPivotValueDetail");
    };
    WebPivotValueEventArgsDescriptionMetadata.d = function (a) {
        WebPivotValueEventArgsDescriptionMetadata.b(a);
        a.aa("WebPivotValueEventArgs", function () { return new WebPivotValueEventArgsDescription(); });
        a.z("WebPivotValueEventArgs", WebPivotValueEventArgsDescriptionMetadata.a);
    };
    WebPivotValueEventArgsDescriptionMetadata.$t = markType(WebPivotValueEventArgsDescriptionMetadata, 'WebPivotValueEventArgsDescriptionMetadata');
    WebPivotValueEventArgsDescriptionMetadata.a = null;
    return WebPivotValueEventArgsDescriptionMetadata;
}(Base));
export { WebPivotValueEventArgsDescriptionMetadata };
