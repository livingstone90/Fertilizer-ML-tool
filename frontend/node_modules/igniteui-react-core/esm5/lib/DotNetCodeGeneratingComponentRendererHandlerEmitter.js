/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { CodeGeneratingComponentRendererHandlerEmitter } from "./CodeGeneratingComponentRendererHandlerEmitter";
import { markType } from "./type";
/**
 * @hidden
 */
var DotNetCodeGeneratingComponentRendererHandlerEmitter = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DotNetCodeGeneratingComponentRendererHandlerEmitter, _super);
    function DotNetCodeGeneratingComponentRendererHandlerEmitter(a, b) {
        return _super.call(this, a, b) || this;
    }
    DotNetCodeGeneratingComponentRendererHandlerEmitter.prototype.t = function (a, b) {
        _super.prototype.t.call(this, a, b);
        a.addUsing(b);
    };
    DotNetCodeGeneratingComponentRendererHandlerEmitter.prototype.r = function (a, b) {
        _super.prototype.r.call(this, a, b);
        if (b) {
            this.f.l("await JS.InvokeVoidAsync(\"" + a + "\");");
        }
        else {
            this.f.l("this." + a + "();");
        }
    };
    DotNetCodeGeneratingComponentRendererHandlerEmitter.prototype.s = function (a, b) {
        _super.prototype.s.call(this, a, b);
        if (b) {
            this.g.l("await JS.InvokeVoidAsync(\"" + a + "\");");
        }
        else {
            this.g.l("this." + a + "();");
        }
    };
    DotNetCodeGeneratingComponentRendererHandlerEmitter.prototype.o = function (a) {
        return a;
    };
    DotNetCodeGeneratingComponentRendererHandlerEmitter.$t = markType(DotNetCodeGeneratingComponentRendererHandlerEmitter, 'DotNetCodeGeneratingComponentRendererHandlerEmitter', CodeGeneratingComponentRendererHandlerEmitter.$);
    return DotNetCodeGeneratingComponentRendererHandlerEmitter;
}(CodeGeneratingComponentRendererHandlerEmitter));
export { DotNetCodeGeneratingComponentRendererHandlerEmitter };
