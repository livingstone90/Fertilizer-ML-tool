/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var WebExporterOptionsBaseDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebExporterOptionsBaseDescription, _super);
    function WebExporterOptionsBaseDescription() {
        var _this = _super.call(this) || this;
        _this.j = false;
        _this.k = false;
        _this.i = false;
        _this.n = false;
        _this.l = false;
        _this.m = false;
        _this.g = false;
        _this.h = false;
        _this.f = false;
        _this.x = null;
        return _this;
    }
    WebExporterOptionsBaseDescription.prototype.get_type = function () {
        return "WebExporterOptionsBase";
    };
    Object.defineProperty(WebExporterOptionsBaseDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebExporterOptionsBaseDescription.prototype, "ignoreColumnsVisibility", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.e("IgnoreColumnsVisibility");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebExporterOptionsBaseDescription.prototype, "ignoreFiltering", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
            this.e("IgnoreFiltering");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebExporterOptionsBaseDescription.prototype, "ignoreColumnsOrder", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
            this.e("IgnoreColumnsOrder");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebExporterOptionsBaseDescription.prototype, "ignoreSorting", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.e("IgnoreSorting");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebExporterOptionsBaseDescription.prototype, "ignoreGrouping", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.e("IgnoreGrouping");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebExporterOptionsBaseDescription.prototype, "ignoreMultiColumnHeaders", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.e("IgnoreMultiColumnHeaders");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebExporterOptionsBaseDescription.prototype, "exportSummaries", {
        get: function () {
            return this.g;
        },
        set: function (a) {
            this.g = a;
            this.e("ExportSummaries");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebExporterOptionsBaseDescription.prototype, "freezeHeaders", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.e("FreezeHeaders");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebExporterOptionsBaseDescription.prototype, "alwaysExportHeaders", {
        get: function () {
            return this.f;
        },
        set: function (a) {
            this.f = a;
            this.e("AlwaysExportHeaders");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebExporterOptionsBaseDescription.prototype, "fileName", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.e("FileName");
        },
        enumerable: false,
        configurable: true
    });
    WebExporterOptionsBaseDescription.$t = markType(WebExporterOptionsBaseDescription, 'WebExporterOptionsBaseDescription', Description.$);
    return WebExporterOptionsBaseDescription;
}(Description));
export { WebExporterOptionsBaseDescription };
