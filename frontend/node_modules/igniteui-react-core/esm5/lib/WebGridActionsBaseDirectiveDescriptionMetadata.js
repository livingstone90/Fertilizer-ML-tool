/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebGridActionButtonDescriptionMetadata } from "./WebGridActionButtonDescriptionMetadata";
import { WebActionStripDescriptionMetadata } from "./WebActionStripDescriptionMetadata";
import { WebGridActionsBaseDirectiveDescription } from "./WebGridActionsBaseDirectiveDescription";
/**
 * @hidden
 */
var WebGridActionsBaseDirectiveDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebGridActionsBaseDirectiveDescriptionMetadata, _super);
    function WebGridActionsBaseDirectiveDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebGridActionsBaseDirectiveDescriptionMetadata.b = function (a) {
        if (WebGridActionsBaseDirectiveDescriptionMetadata.a == null) {
            WebGridActionsBaseDirectiveDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebGridActionsBaseDirectiveDescriptionMetadata.c(WebGridActionsBaseDirectiveDescriptionMetadata.a);
        }
        if (a.j(WebGridActionsBaseDirectiveDescriptionMetadata.a)) {
            return;
        }
        a.y(WebGridActionsBaseDirectiveDescriptionMetadata.a);
        WebGridActionButtonDescriptionMetadata.d(a);
        WebActionStripDescriptionMetadata.d(a);
    };
    WebGridActionsBaseDirectiveDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:GridActionsBaseDirective");
        a.item("__tagNameWC", "String:igc-grid-action-base-directive");
        a.item("__packageNameWC", "String:grids");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
        a.item("__manageCollectionInMarkup", "Boolean");
        a.item("Buttons", "Array:WebGridActionButtonDescription:GridActionButton");
        a.item("AsMenuItems", "Boolean");
        a.item("Strip", "ExportedType:WebActionStrip");
        a.item("Name", "String");
    };
    WebGridActionsBaseDirectiveDescriptionMetadata.d = function (a) {
        WebGridActionsBaseDirectiveDescriptionMetadata.b(a);
        a.aa("WebGridActionsBaseDirective", function () { return new WebGridActionsBaseDirectiveDescription(); });
        a.z("WebGridActionsBaseDirective", WebGridActionsBaseDirectiveDescriptionMetadata.a);
    };
    WebGridActionsBaseDirectiveDescriptionMetadata.$t = markType(WebGridActionsBaseDirectiveDescriptionMetadata, 'WebGridActionsBaseDirectiveDescriptionMetadata');
    WebGridActionsBaseDirectiveDescriptionMetadata.a = null;
    return WebGridActionsBaseDirectiveDescriptionMetadata;
}(Base));
export { WebGridActionsBaseDirectiveDescriptionMetadata };
