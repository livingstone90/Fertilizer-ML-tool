/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var WebCellTypeDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebCellTypeDescription, _super);
    function WebCellTypeDescription() {
        var _this = _super.call(this) || this;
        _this.ad = null;
        _this.ab = null;
        _this.s = false;
        _this.o = false;
        _this.p = false;
        _this.q = false;
        _this.f = null;
        _this.h = null;
        _this.j = null;
        _this.aa = null;
        _this.l = null;
        _this.r = false;
        _this.ac = null;
        _this.aj = null;
        _this.y = 0;
        return _this;
    }
    WebCellTypeDescription.prototype.get_type = function () {
        return "WebCellType";
    };
    Object.defineProperty(WebCellTypeDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebCellTypeDescription.prototype, "value", {
        get: function () {
            return this.ad;
        },
        set: function (a) {
            this.ad = a;
            this.e("Value");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebCellTypeDescription.prototype, "editValue", {
        get: function () {
            return this.ab;
        },
        set: function (a) {
            this.ab = a;
            this.e("EditValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebCellTypeDescription.prototype, "selected", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            this.s = a;
            this.e("Selected");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebCellTypeDescription.prototype, "active", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
            this.e("Active");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebCellTypeDescription.prototype, "editable", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.e("Editable");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebCellTypeDescription.prototype, "editMode", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
            this.e("EditMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebCellTypeDescription.prototype, "column", {
        get: function () {
            return this.f;
        },
        set: function (a) {
            this.f = a;
            this.e("Column");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebCellTypeDescription.prototype, "grid", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.e("Grid");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebCellTypeDescription.prototype, "id", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.e("Id");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebCellTypeDescription.prototype, "cellID", {
        get: function () {
            return this.aa;
        },
        set: function (a) {
            this.aa = a;
            this.e("CellID");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebCellTypeDescription.prototype, "validation", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.e("Validation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebCellTypeDescription.prototype, "readonly", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.e("Readonly");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebCellTypeDescription.prototype, "title", {
        get: function () {
            return this.ac;
        },
        set: function (a) {
            this.ac = a;
            this.e("Title");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebCellTypeDescription.prototype, "width", {
        get: function () {
            return this.aj;
        },
        set: function (a) {
            this.aj = a;
            this.e("Width");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebCellTypeDescription.prototype, "visibleColumnIndex", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            this.y = a;
            this.e("VisibleColumnIndex");
        },
        enumerable: false,
        configurable: true
    });
    WebCellTypeDescription.$t = markType(WebCellTypeDescription, 'WebCellTypeDescription', Description.$);
    WebCellTypeDescription.__marshalByValue = true;
    WebCellTypeDescription.__marshalByValueAlias = "CellType";
    return WebCellTypeDescription;
}(Description));
export { WebCellTypeDescription };
