/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebPivotDimensionDescriptionMetadata } from "./WebPivotDimensionDescriptionMetadata";
import { WebDimensionsChangeDescription } from "./WebDimensionsChangeDescription";
/**
 * @hidden
 */
var WebDimensionsChangeDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebDimensionsChangeDescriptionMetadata, _super);
    function WebDimensionsChangeDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebDimensionsChangeDescriptionMetadata.b = function (a) {
        if (WebDimensionsChangeDescriptionMetadata.a == null) {
            WebDimensionsChangeDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebDimensionsChangeDescriptionMetadata.c(WebDimensionsChangeDescriptionMetadata.a);
        }
        if (a.j(WebDimensionsChangeDescriptionMetadata.a)) {
            return;
        }
        a.y(WebDimensionsChangeDescriptionMetadata.a);
        WebPivotDimensionDescriptionMetadata.d(a);
    };
    WebDimensionsChangeDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:DimensionsChange");
        a.item("__packageNameWC", "String:grids");
        a.item("__isPlainObject", "Boolean");
        a.item("Dimensions", "Array:WebPivotDimensionDescription:PivotDimension");
        a.item("DimensionCollectionType", "ExportedType:string:PivotDimensionType");
        a.item("DimensionCollectionType@names", "Row;Column;Filter");
    };
    WebDimensionsChangeDescriptionMetadata.d = function (a) {
        WebDimensionsChangeDescriptionMetadata.b(a);
        a.aa("WebDimensionsChange", function () { return new WebDimensionsChangeDescription(); });
        a.z("WebDimensionsChange", WebDimensionsChangeDescriptionMetadata.a);
    };
    WebDimensionsChangeDescriptionMetadata.$t = markType(WebDimensionsChangeDescriptionMetadata, 'WebDimensionsChangeDescriptionMetadata');
    WebDimensionsChangeDescriptionMetadata.a = null;
    return WebDimensionsChangeDescriptionMetadata;
}(Base));
export { WebDimensionsChangeDescriptionMetadata };
