/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { CategoryAxisBaseDescription } from "./CategoryAxisBaseDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var CategoryYAxisDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CategoryYAxisDescription, _super);
    function CategoryYAxisDescription() {
        var _this = _super.call(this) || this;
        _this.dv = 0;
        _this.dt = 0;
        _this.dw = 0;
        _this.du = 0;
        _this.dx = 0;
        _this.dy = 0;
        _this.dz = 0;
        _this.d0 = 0;
        _this.d1 = 0;
        _this.eb = null;
        _this.ec = null;
        return _this;
    }
    CategoryYAxisDescription.prototype.get_type = function () {
        return "CategoryYAxis";
    };
    Object.defineProperty(CategoryYAxisDescription.prototype, "interval", {
        get: function () {
            return this.dv;
        },
        set: function (a) {
            this.dv = a;
            this.e("Interval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryYAxisDescription.prototype, "actualInterval", {
        get: function () {
            return this.dt;
        },
        set: function (a) {
            this.dt = a;
            this.e("ActualInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryYAxisDescription.prototype, "minorInterval", {
        get: function () {
            return this.dw;
        },
        set: function (a) {
            this.dw = a;
            this.e("MinorInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryYAxisDescription.prototype, "actualMinorInterval", {
        get: function () {
            return this.du;
        },
        set: function (a) {
            this.du = a;
            this.e("ActualMinorInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryYAxisDescription.prototype, "zoomMaximumCategoryRange", {
        get: function () {
            return this.dx;
        },
        set: function (a) {
            this.dx = a;
            this.e("ZoomMaximumCategoryRange");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryYAxisDescription.prototype, "zoomMaximumItemSpan", {
        get: function () {
            return this.dy;
        },
        set: function (a) {
            this.dy = a;
            this.e("ZoomMaximumItemSpan");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryYAxisDescription.prototype, "zoomToCategoryRange", {
        get: function () {
            return this.dz;
        },
        set: function (a) {
            this.dz = a;
            this.e("ZoomToCategoryRange");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryYAxisDescription.prototype, "zoomToCategoryStart", {
        get: function () {
            return this.d0;
        },
        set: function (a) {
            this.d0 = a;
            this.e("ZoomToCategoryStart");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryYAxisDescription.prototype, "zoomToItemSpan", {
        get: function () {
            return this.d1;
        },
        set: function (a) {
            this.d1 = a;
            this.e("ZoomToItemSpan");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryYAxisDescription.prototype, "actualIntervalChangeRef", {
        get: function () {
            return this.eb;
        },
        set: function (a) {
            this.eb = a;
            this.e("ActualIntervalChangeRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryYAxisDescription.prototype, "actualMinorIntervalChangeRef", {
        get: function () {
            return this.ec;
        },
        set: function (a) {
            this.ec = a;
            this.e("ActualMinorIntervalChangeRef");
        },
        enumerable: false,
        configurable: true
    });
    CategoryYAxisDescription.$t = markType(CategoryYAxisDescription, 'CategoryYAxisDescription', CategoryAxisBaseDescription.$);
    return CategoryYAxisDescription;
}(CategoryAxisBaseDescription));
export { CategoryYAxisDescription };
