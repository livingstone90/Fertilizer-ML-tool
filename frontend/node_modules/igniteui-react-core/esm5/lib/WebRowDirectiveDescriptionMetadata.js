/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebRowDirectiveDescription } from "./WebRowDirectiveDescription";
/**
 * @hidden
 */
var WebRowDirectiveDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebRowDirectiveDescriptionMetadata, _super);
    function WebRowDirectiveDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebRowDirectiveDescriptionMetadata.b = function (a) {
        if (WebRowDirectiveDescriptionMetadata.a == null) {
            WebRowDirectiveDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebRowDirectiveDescriptionMetadata.c(WebRowDirectiveDescriptionMetadata.a);
        }
        if (a.j(WebRowDirectiveDescriptionMetadata.a)) {
            return;
        }
        a.y(WebRowDirectiveDescriptionMetadata.a);
    };
    WebRowDirectiveDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:RowDirective");
        a.item("__packageNameWC", "String:grids");
        a.item("__manageCollectionInMarkup", "Boolean");
        a.item("Data", "Unknown");
        a.item("Index", "Number:double");
        a.item("Disabled", "Boolean");
        a.item("Pinned", "Boolean");
        a.item("Expanded", "Boolean");
        a.item("Selected", "Boolean");
    };
    WebRowDirectiveDescriptionMetadata.d = function (a) {
        WebRowDirectiveDescriptionMetadata.b(a);
        a.aa("WebRowDirective", function () { return new WebRowDirectiveDescription(); });
        a.z("WebRowDirective", WebRowDirectiveDescriptionMetadata.a);
    };
    WebRowDirectiveDescriptionMetadata.$t = markType(WebRowDirectiveDescriptionMetadata, 'WebRowDirectiveDescriptionMetadata');
    WebRowDirectiveDescriptionMetadata.a = null;
    return WebRowDirectiveDescriptionMetadata;
}(Base));
export { WebRowDirectiveDescriptionMetadata };
